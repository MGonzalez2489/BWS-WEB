{
    "pipes": [],
    "interfaces": [
        {
            "name": "AuthState",
            "id": "interface-AuthState-ecc6b981068c0d595b81bde32289896b84e704df65384dfeebd25d337690fa7cae35a2ba4eec05329a1d65c6a224109169c8708f7b36f5ab24ec335372fa669a",
            "file": "src/store/states/auth.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthState {\n  token: string | null;\n}\n",
            "properties": [
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BaseModel",
            "id": "interface-BaseModel-7560938eb6c7dd8b2a768b6a50ef90bea6407d3039456344c6df926eb72127c2e64263cd4d88067d55d7011401280cd3d9fca9d948bb935dae28fee0050b64b6",
            "file": "src/app/_shared/models/database/_base.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BaseModel {\n  publicId: string;\n  createdAt: string;\n}\n",
            "properties": [
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "publicId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BWSState",
            "id": "interface-BWSState-496c2ad9bdbaa92d92ee45a28eaa3fda7c1f4d1467e13f6676093363fb3614ea16ff4979ff422270f04c9573df446ec7a0b64a51d77a519a50f204a3f7242651",
            "file": "src/store/states/BWS.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AuthState } from './auth.state';\nimport { ErrorState } from './error.state';\nimport { ProviderState } from './provider.state';\nimport { UiState } from './ui.state';\nimport { UserState } from './user.state';\n\nexport interface BWSState {\n  UI: UiState;\n  auth: AuthState;\n  user: UserState;\n  error: ErrorState;\n  provider: ProviderState;\n}\n",
            "properties": [
                {
                    "name": "auth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthState",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErrorState",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "provider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProviderState",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "UI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UiState",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserState",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ConsumerState",
            "id": "interface-ConsumerState-5805bd85c1557ab56719b3b23fc49264dbbe8ce312265514f87727de3fd4eaa9e77ac3ba66607c1f08cbba2e1fd46569aef03c0508d9bcae544277bd3efa6358",
            "file": "src/app/consumer/store/states/consumer.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ConsumerState {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "ErrorState",
            "id": "interface-ErrorState-34cc342c6ccb6a20e0d19ef225a2e5c5c914feb593927d4d6ee58d7cb29b07e7800afa5d806c6a6039a94163afb57903c764bfa046035a73b1f1aa3a3b1d0662",
            "file": "src/store/states/error.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ErrorState {\n  lastError: string;\n}\n",
            "properties": [
                {
                    "name": "lastError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IArtistProfile",
            "id": "interface-IArtistProfile-c1e85e3b1587f9e4b288577959e006a7186d9e9dc5eea61826c41c743239dacce79d4d3ddd797f5aeaa260df6598bcf5f3de920d359919c20b13d550287e88ee",
            "file": "src/app/_shared/models/database/artist-profile.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IArtistService } from './artist-service.model';\nimport { BaseModel } from './_base.model';\n\nexport interface IArtistProfile extends BaseModel {\n  services: Array<IArtistService>;\n}\n",
            "properties": [
                {
                    "name": "services",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<IArtistService>",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "BaseModel"
        },
        {
            "name": "IArtistService",
            "id": "interface-IArtistService-21b107a6a0386c76efc7d7b84798befee6b6f82a5214bbc0e445b2dd8ca4cdecca20dab12df8338e02fc752a09e15a52c7012dd288d92349ea5333e3c8d962ca",
            "file": "src/app/_shared/models/database/artist-service.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BaseModel } from './_base.model';\n\nexport interface IArtistService extends BaseModel {\n  cost: number;\n}\n",
            "properties": [
                {
                    "name": "cost",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "BaseModel"
        },
        {
            "name": "ICategory",
            "id": "interface-ICategory-84277c5751b08401b771599200777dcb35ff5493e706ed5c8f997a64342b04aead841f2febe84a4879115beb85c968e63f141bfc65cea90f93b518491696fe56",
            "file": "src/app/_shared/models/database/category.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IService } from './service.model';\nimport { BaseModel } from './_base.model';\n\nexport interface ICategory extends BaseModel {\n  name: string;\n  displayName: string;\n  services: Array<IService>;\n}\n",
            "properties": [
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "services",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<IService>",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "BaseModel"
        },
        {
            "name": "IConsumerProfile",
            "id": "interface-IConsumerProfile-c331118fb7cd5909294454b96c7be22128400f5695137fa4f2a78f6b7b0a733c1612fd2257cc63736f1d2ae62eca74625079161babbacf28fc35254d0a21f476",
            "file": "src/app/_shared/models/database/consumer-profile.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BaseModel } from './_base.model';\n\nexport interface IConsumerProfile extends BaseModel {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "BaseModel"
        },
        {
            "name": "ILogin",
            "id": "interface-ILogin-afe7d73cead4f1459c2db9161ad9a110747fa0cda390bd499193d63c8ebfda46cf14126be095e3b0c0ea26c4841952ef0e1355e8d15fe41b072475167d531c54",
            "file": "src/app/_shared/models/request/login.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ILogin {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "rememberMe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IService",
            "id": "interface-IService-3c540241aad043d79762cce3e9ff3175b1daf61ee0a99d5ddc3df9caee99c8eec2a667915acb824a9ec7711eb6747d8a23707a05dfd67c915c58e2a943e20a96",
            "file": "src/app/_shared/models/database/service.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BaseModel } from './_base.model';\n\nexport interface IService extends BaseModel {\n  name: string;\n  displayName: string;\n}\n",
            "properties": [
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "BaseModel"
        },
        {
            "name": "ISession",
            "id": "interface-ISession-a68443ce4252f02abacafd9a496879718c8f39c9b750319e8c330f35010d7d86ffc57d607b0895fb9330aafdeb7440826bae82e11c6acd38d7aeb596e42eb664",
            "file": "src/app/_shared/models/response/session.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IUser } from '../database';\n\nexport interface ISession {\n  token: string;\n  user: IUser;\n}\n",
            "properties": [
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUser",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IUser",
            "id": "interface-IUser-3ece2674dd893825cb7ba13284cf51f9334fc7beb5de26b3a225050c847763ec56554af3a357a68da2901627fc49ea2619308129bf337b08aa6fc285a497dd33",
            "file": "src/app/_shared/models/database/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IArtistProfile } from './artist-profile.model';\nimport { IConsumerProfile } from './consumer-profile.model';\nimport { BaseModel } from './_base.model';\n\nexport interface IUser extends BaseModel {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  fullName: string;\n  gender: string;\n  boardingRequired: boolean;\n\n  consumerProfile?: IConsumerProfile;\n  artistProfile?: IArtistProfile;\n}\n",
            "properties": [
                {
                    "name": "artistProfile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IArtistProfile",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "boardingRequired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "consumerProfile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IConsumerProfile",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "BaseModel"
        },
        {
            "name": "Organization",
            "id": "interface-Organization-32a6901e1181043ac5bad45b7faf47523ab6f67ce9058b83b5eba57091ad45d7a1654bc63bbc11b8773a41f954bb92c93fd2791795e12eea7721f2a349913454",
            "file": "src/app/_shared/models/database/organization.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BaseModel } from './_base.model';\n\nexport interface Organization extends BaseModel {\n  Name: string;\n}\n",
            "properties": [
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "BaseModel"
        },
        {
            "name": "ProviderState",
            "id": "interface-ProviderState-38d83ec448fb5ab8b4137b3e2c46f4bdebfb1df495ce7624f07b82ddd0d7db65aa4c4dac5afa24c6931b0bcfdf5f1566a2e55ac35afc14e22ff475500dcb4766",
            "file": "src/store/states/provider.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ICategory, IService } from '@shared/models';\n\n//provide all required information to use the application\nexport interface ProviderState {\n  categories: Array<ICategory>;\n  services: Array<IService>;\n}\n",
            "properties": [
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<ICategory>",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "services",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<IService>",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResultListModel",
            "id": "interface-ResultListModel-a1e3f002eb74e87a8a87b27ceecd56253eb790c7e8391084d92f2ec4b2f37afeff1a4a1e3e39378a07f09018743bf7d7bb32b2f651eefa512730f2bbb99f1a48",
            "file": "src/app/_shared/models/response/result-list.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ResultListModel<T> {\n  isSuccess: boolean;\n  model: Array<T>;\n  totalRecords: number;\n  totalPages: number;\n  message: string;\n  httpError: string;\n}\n",
            "properties": [
                {
                    "name": "httpError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "isSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<T>",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "totalPages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "totalRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResultModel",
            "id": "interface-ResultModel-63b7924a4fbe32d13518280dc4927c294ff710e74d4c8e714160b50a743a1a5d2df74b0bc01e87be0f0df8ec89ec89d1c15fb2009a8ce23fabafa5dbd35cebd6",
            "file": "src/app/_shared/models/response/result.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ResultModel<T> {\n  isSuccess: boolean;\n  model: T;\n  message: string;\n  httpError: string;\n}\n",
            "properties": [
                {
                    "name": "httpError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UiState",
            "id": "interface-UiState-4e83819f1ff2b927bbb0893f84257e127dece6bdf85a56086c15ad01902ab2b3cbbe409534560a663afdbffca0b2b7ea26dd1c8593d7d23bfe9d8166db16f762",
            "file": "src/store/states/ui.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UiState {\n  modal: boolean | null;\n}\n",
            "properties": [
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "UserState",
            "id": "interface-UserState-c97dd903ccf29fac6bf4f66697f8978b0ff01abc9e229f001f02d8322e77e82571c0087519ddf4c5f42e1da298209f6b585af845110201ca3bf6850401d3eff7",
            "file": "src/store/states/user.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IUser } from '@shared/models';\n\nexport interface UserState {\n  user: IUser | null;\n}\n",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUser | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ArtistServicesService",
            "id": "injectable-ArtistServicesService-c77fe88fc01cd4f1f4655c4cd83041662cddb6bc6f6e7f34a0893d32de2060cc3e69120917a697003af31ec974f7ff9aeebb204bd86e3d49dae3fc3e023c9162",
            "file": "src/app/_core/services/artist-service.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createArtistService",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "serviceId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cost",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<IArtistProfile>>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "serviceId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cost",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { IArtistProfile, ResultModel } from '@shared/models';\nimport { Observable } from 'rxjs';\nimport { RequestService } from './request.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ArtistServicesService {\n  constructor(private requestService: RequestService) {}\n\n  createArtistService(\n    userId: string,\n    serviceId: string,\n    cost: number\n  ): Observable<ResultModel<IArtistProfile>> {\n    return this.requestService.post(`artist/${userId}/services/create`, {\n      serviceId,\n      cost,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthEffects",
            "id": "injectable-AuthEffects-a10bcf0994c08461f379f9d3baf46a785dc8c0caddc65043d99146b6c72ddfea1e4a37a8feccf9c9fcede833f096df80eaab699ca8e4172cb1b66b7f57f57266",
            "file": "src/store/effects/auth.effects.ts",
            "properties": [
                {
                    "name": "login$",
                    "defaultValue": "createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.LoginAction),\n      mergeMap((data: { params: ILogin }) => {\n        this.errorService.cleanError();\n        return this.authService.login(data.params).pipe(\n          map((response: ResultModel<ISession>) => {\n            if (!response.isSuccess) {\n              this.errorService.setError(response);\n              return AuthActions.LoginFailedAction({\n                payload: response.message,\n              });\n            }\n            const user = response.model.user;\n            if (user.boardingRequired) {\n              this.router.navigate(['/onboarding']);\n            } else {\n              if (user.consumerProfile) {\n                this.router.navigate(['/1']);\n              } else {\n                this.router.navigate(['/2']);\n              }\n              //navigate to the starting page for each profile\n            }\n            //navigate to organization home page for owner\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n            return AuthActions.LoginSuccessAction({\n              session: response.model,\n            });\n          }),\n          catchError((err) => {\n            this.errorService.setError(err);\n\n            return of(AuthActions.LoginFailedAction({ payload: err }));\n          })\n        );\n      })\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "signin",
                    "defaultValue": "createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.SigninAction),\n      mergeMap((data: { params: ILogin }) => {\n        this.errorService.cleanError();\n\n        return this.authService.signin(data.params).pipe(\n          map((response: ResultModel<ISession>) => {\n            if (!response.isSuccess) {\n              this.errorService.setError(response);\n              return AuthActions.SigninFailedAction({ payload: response });\n            }\n\n            const user = response.model.user;\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n\n            this.router.navigate(['/onboarding']);\n            return AuthActions.SigninSuccessAction({\n              session: response.model,\n            });\n          }),\n          catchError((err) => {\n            this.errorService.setError(err);\n            return of(AuthActions.SigninFailedAction({ payload: err }));\n          })\n        );\n      })\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { AuthService } from '@core/services';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, mergeMap, of } from 'rxjs';\n\nimport * as AuthActions from '@store/actions/auth.actions';\nimport * as UserActions from '@store/actions/user.actions';\nimport { ILogin, ISession, ResultModel } from '@shared/models';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { BWSState } from '@store/states';\nimport { ErrorService } from '@core/services/error.service';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private errorService: ErrorService,\n    private router: Router,\n    private store: Store<BWSState>\n  ) {}\n\n  login$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.LoginAction),\n      mergeMap((data: { params: ILogin }) => {\n        this.errorService.cleanError();\n        return this.authService.login(data.params).pipe(\n          map((response: ResultModel<ISession>) => {\n            if (!response.isSuccess) {\n              this.errorService.setError(response);\n              return AuthActions.LoginFailedAction({\n                payload: response.message,\n              });\n            }\n            const user = response.model.user;\n            if (user.boardingRequired) {\n              this.router.navigate(['/onboarding']);\n            } else {\n              if (user.consumerProfile) {\n                this.router.navigate(['/1']);\n              } else {\n                this.router.navigate(['/2']);\n              }\n              //navigate to the starting page for each profile\n            }\n            //navigate to organization home page for owner\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n            return AuthActions.LoginSuccessAction({\n              session: response.model,\n            });\n          }),\n          catchError((err) => {\n            this.errorService.setError(err);\n\n            return of(AuthActions.LoginFailedAction({ payload: err }));\n          })\n        );\n      })\n    )\n  );\n\n  signin = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.SigninAction),\n      mergeMap((data: { params: ILogin }) => {\n        this.errorService.cleanError();\n\n        return this.authService.signin(data.params).pipe(\n          map((response: ResultModel<ISession>) => {\n            if (!response.isSuccess) {\n              this.errorService.setError(response);\n              return AuthActions.SigninFailedAction({ payload: response });\n            }\n\n            const user = response.model.user;\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n\n            this.router.navigate(['/onboarding']);\n            return AuthActions.SigninSuccessAction({\n              session: response.model,\n            });\n          }),\n          catchError((err) => {\n            this.errorService.setError(err);\n            return of(AuthActions.SigninFailedAction({ payload: err }));\n          })\n        );\n      })\n    )\n  );\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "errorService",
                        "type": "ErrorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "errorService",
                        "type": "ErrorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-0c23dd38940dce1f9c8c24187f1be97b81299713dd1658d76ab0e95b99fe24b213e660b8f1daf555ff7801a0d5cb0e3af2728253e4e230e03ab191af6d3f0972",
            "file": "src/app/_core/services/auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "loginParams",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<ISession>>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "loginParams",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signin",
                    "args": [
                        {
                            "name": "params",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<ISession>>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "ILogin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ILogin } from '@shared/models';\nimport { ISession, ResultModel } from '@shared/models/response';\nimport { Observable } from 'rxjs';\nimport { RequestService } from './request.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private requestService: RequestService) {}\n  login(loginParams: ILogin): Observable<ResultModel<ISession>> {\n    return this.requestService.post<ISession>('auth/login', loginParams);\n  }\n  signin(params: ILogin): Observable<ResultModel<ISession>> {\n    return this.requestService.post<ISession>('auth/signin', params);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CategoryService",
            "id": "injectable-CategoryService-fab82872e1c001f7da85d781ed6fda2257409f3ba051b954e41e5566867acc3c90d50b9157c0e555339028ad6a8e4c897261b30f2410634b0d13148523718b7f",
            "file": "src/app/_core/services/category.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCategories",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ResultListModel<ICategory>>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getServicesByCategory",
                    "args": [
                        {
                            "name": "categoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultListModel<IService>>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "categoryId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ICategory, IService, ResultListModel } from '@shared/models';\nimport { Observable } from 'rxjs';\nimport { RequestService } from './request.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  constructor(private requestService: RequestService) {}\n\n  getCategories(): Observable<ResultListModel<ICategory>> {\n    return this.requestService.getList<ICategory>('categories');\n  }\n\n  getServicesByCategory(\n    categoryId: string\n  ): Observable<ResultListModel<IService>> {\n    return this.requestService.getList('services', { category: categoryId });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ErrorService",
            "id": "injectable-ErrorService-45e2aa18418c5eaa8a8878c5b40d859ec4f5ccac31954b2c4ef83f18e9269ed4e0e269771a193c262f88638dc7de00e51c6c4add6d57ebee8b066b7c2126dd2a",
            "file": "src/app/_core/services/error.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "cleanError",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setError",
                    "args": [
                        {
                            "name": "error",
                            "type": "ResultModel<any> | ResultListModel<any> | string | HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "ResultModel<any> | ResultListModel<any> | string | HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ResultListModel, ResultModel } from '@shared/models';\nimport { BWSState } from '@store/states';\nimport * as ErrorActions from '@store/actions/error.actions';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({ providedIn: 'root' })\nexport class ErrorService {\n  constructor(private store: Store<BWSState>) {}\n\n  setError(\n    error: ResultModel<any> | ResultListModel<any> | string | HttpErrorResponse\n  ): void {\n    let errorMessage: string;\n\n    errorMessage =\n      error instanceof HttpErrorResponse\n        ? error.error.message\n        : error['message'] || error;\n\n    errorMessage = errorMessage.replace(/^\"(.+(?=\"$))\"$/, '$1');\n\n    this.store.dispatch(ErrorActions.SetErrorAction({ error: errorMessage }));\n  }\n  cleanError() {\n    this.store.dispatch(ErrorActions.CleanErrorAction());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProfileService",
            "id": "injectable-ProfileService-345807bb9405708d0b68cd77c943fad082357590a1001d7c9e0da232145caa46c6821696015b86396affea0ceda4e2ee424964b9da7d92af4819bb969e92086f",
            "file": "src/app/_core/services/profile.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createArtistProfile",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<IUser>>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createConsumerProfile",
                    "args": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<IUser>>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { IUser, ResultModel } from '@shared/models';\nimport { Observable } from 'rxjs';\nimport { RequestService } from './request.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  constructor(private requestService: RequestService) {}\n\n  createArtistProfile(userId: string): Observable<ResultModel<IUser>> {\n    return this.requestService.post<IUser>(\n      `users/${userId}/artist/profile`,\n      {}\n    );\n  }\n\n  createConsumerProfile(userId: string): Observable<ResultModel<IUser>> {\n    return this.requestService.post<IUser>(\n      `users/${userId}/consumer/profile`,\n      {}\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProviderEffects",
            "id": "injectable-ProviderEffects-77c24f80d8a137ffa2b693033421849c1cbbf64d385e04edcb1bbf41b678a744a41617316a511048e7908d781b2a5466e2bbe927e9cd7ef44e66c86411b25849",
            "file": "src/store/effects/provider.effects.ts",
            "properties": [
                {
                    "name": "getCategories$",
                    "defaultValue": "createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProviderActions.GetCategoriesAction),\n      mergeMap(() =>\n        this.categoryService.getCategories().pipe(\n          map((response: ResultListModel<ICategory>) => {\n            return ProviderActions.GetCategoriesSuccessAction({\n              categories: response.model,\n            });\n          }),\n          catchError((error) =>\n            of(ProviderActions.GetCategoriesFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "getServices$",
                    "defaultValue": "createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProviderActions.GetServicesAction),\n      mergeMap((data) =>\n        this.categoryService.getServicesByCategory(data.category).pipe(\n          map((response: ResultListModel<IService>) => {\n            return ProviderActions.GetServicesSuccessAction({\n              services: response.model,\n            });\n          }),\n          catchError((error) =>\n            of(ProviderActions.GetServicesFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CategoryService } from '@core/services';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ICategory, IService, ResultListModel } from '@shared/models';\nimport * as ProviderActions from '@store/actions/provider.actions';\nimport { catchError, map, mergeMap, of } from 'rxjs';\n\n@Injectable()\nexport class ProviderEffects {\n  constructor(\n    private actions$: Actions,\n    private categoryService: CategoryService\n  ) {}\n\n  getCategories$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProviderActions.GetCategoriesAction),\n      mergeMap(() =>\n        this.categoryService.getCategories().pipe(\n          map((response: ResultListModel<ICategory>) => {\n            return ProviderActions.GetCategoriesSuccessAction({\n              categories: response.model,\n            });\n          }),\n          catchError((error) =>\n            of(ProviderActions.GetCategoriesFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  );\n\n  getServices$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProviderActions.GetServicesAction),\n      mergeMap((data) =>\n        this.categoryService.getServicesByCategory(data.category).pipe(\n          map((response: ResultListModel<IService>) => {\n            return ProviderActions.GetServicesSuccessAction({\n              services: response.model,\n            });\n          }),\n          catchError((error) =>\n            of(ProviderActions.GetServicesFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  );\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "categoryService",
                        "type": "CategoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "categoryService",
                        "type": "CategoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RequestService",
            "id": "injectable-RequestService-cbd2c9e2af7caeb556d440da319211544abf1d812de588610b3de1dc5cf32798e033fb7f9c72d82db5384293369239331213a7c1ab919a7f15b169fddf096c90",
            "file": "src/app/_core/services/request.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultListModel<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUrl",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "objectToQueryParameter",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HttpParams",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "model",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "put",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<T>>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "model",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "headers",
                            "type": "HttpHeaders",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@environment/environment';\nimport { ResultListModel, ResultModel } from '@shared/models';\nimport { map, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestService {\n  constructor(private httpClient: HttpClient) {}\n\n  private getUrl(url: string): string {\n    return environment.baseUrl + url;\n  }\n\n  private objectToQueryParameter(obj: any): HttpParams {\n    let params: HttpParams = new HttpParams();\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const element = obj[key];\n        params = params.set(key, element);\n      }\n    }\n    return params;\n  }\n\n  public get<T>(url: string, params?: any): Observable<ResultModel<T>> {\n    return this.httpClient\n      .get<ResultModel<T>>(this.getUrl(url), {\n        params: this.objectToQueryParameter(params),\n      })\n      .pipe(map((res) => res));\n  }\n\n  public getList<T>(url: string, params?: any): Observable<ResultListModel<T>> {\n    return this.httpClient\n      .get<ResultListModel<T>>(this.getUrl(url), {\n        params: this.objectToQueryParameter(params),\n      })\n      .pipe(map((res) => res));\n  }\n\n  public post<T>(\n    url: string,\n    model: Object,\n    headers?: HttpHeaders\n  ): Observable<ResultModel<T>> {\n    return this.httpClient\n      .post<ResultModel<T>>(this.getUrl(url), model, { headers })\n      .pipe(map((res) => res));\n  }\n\n  public put<T>(\n    url: string,\n    model: Object,\n    headers?: HttpHeaders\n  ): Observable<ResultModel<T>> {\n    return this.httpClient\n      .put<ResultModel<T>>(this.getUrl(url), model, { headers })\n      .pipe(map((res) => res));\n  }\n  public delete<T>(\n    url: string,\n    headers?: HttpHeaders\n  ): Observable<ResultModel<T>> {\n    return this.httpClient\n      .delete<ResultModel<T>>(this.getUrl(url), { headers })\n      .pipe(map((res) => res));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UiEffects",
            "id": "injectable-UiEffects-305764b47641bdd1d3af90d8e73358ca8d0642ab61169b0eb60973915bf34aca187cbeef27a4592f6f1036a90944aa0fa5fe095790b27c99d7cfa1e45281f2e4",
            "file": "src/store/effects/ui.effects.ts",
            "properties": [
                {
                    "name": "closeModals$",
                    "defaultValue": "createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(RemoveOpenedModalAction),\n        map(() => this.modalService.dismissAll())\n      ),\n    { dispatch: false }\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { RemoveOpenedModalAction, SetOpenedModalAction } from '@store/actions';\nimport { map, mergeMap } from 'rxjs';\n\n@Injectable()\nexport class UiEffects {\n  constructor(private actions$: Actions, private modalService: NgbModal) {}\n\n  closeModals$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(RemoveOpenedModalAction),\n        map(() => this.modalService.dismissAll())\n      ),\n    { dispatch: false }\n  );\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserEffects",
            "id": "injectable-UserEffects-5c2c37bae8dccc62edd3245c692f46b1d91e422ff4d4ba4fa3b0f86c3c351c129aa65aba9ccb2f8333c17fe4db5223be7ebeb5f82316d3276430f3fc433380b9",
            "file": "src/store/effects/user.effects.ts",
            "properties": [
                {
                    "name": "createArtistService$",
                    "defaultValue": "createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.CreateArtistServiceAction),\n      mergeMap((params) =>\n        this.artistServicesService\n          .createArtistService(params.userId, params.serviceId, params.cost)\n          .pipe(\n            map((response: ResultModel<IArtistProfile>) => {\n              if (!response.isSuccess) {\n                return UserActions.CreateArtistServiceFailAction({\n                  payload: response.message,\n                });\n              }\n              this.store.dispatch(RemoveOpenedModalAction());\n              return UserActions.CreateArtistServiceSuccessAction({\n                artistProfile: response.model,\n              });\n            }),\n            catchError((error) =>\n              of(UserActions.CreateArtistServiceFailAction({ payload: error }))\n            )\n          )\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "postArtistProfile$",
                    "defaultValue": "createEffect(() =>\n    this.actions$.pipe(\n      ofType(CreateArtistProfileAction),\n      mergeMap((params) =>\n        this.profileService.createArtistProfile(params.userId).pipe(\n          map((response: ResultModel<IUser>) => {\n            if (!response.isSuccess) {\n              return CreateArtistProfileFailAction({\n                payload: response.message,\n              });\n            }\n\n            const user = response.model;\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n            return CreateArtistProfileSuccessAction({ user: response.model });\n          }),\n          catchError((error) =>\n            of(CreateArtistProfileFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "postConsumerProfile$",
                    "defaultValue": "createEffect(() =>\n    this.actions$.pipe(\n      ofType(CreateConsumerProfileAction),\n      mergeMap((params) =>\n        this.profileService.createConsumerProfile(params.userId).pipe(\n          map((response: ResultModel<IUser>) => {\n            if (!response.isSuccess) {\n              return CreateConsumerProfileFailAction({\n                payload: response.message,\n              });\n            }\n\n            const user = response.model;\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n\n            return CreateConsumerProfileSuccessAction({ user: response.model });\n          }),\n          catchError((error) =>\n            of(CreateConsumerProfileFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "putUpdateUser$",
                    "defaultValue": "createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.UpdateUserAction),\n      mergeMap((params) =>\n        this.userService.updateGeneral(params.user).pipe(\n          map((response: ResultModel<IUser>) => {\n            if (!response.isSuccess) {\n              return UserActions.UpdateUserFailAction({\n                payload: response.message,\n              });\n            }\n\n            const user = response.model;\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n\n            return UserActions.UpdateUserSuccessAction({\n              user: response.model,\n            });\n          }),\n          catchError((error) =>\n            of(UserActions.UpdateUserFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfileService } from '@core/services/profile.service';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { IArtistProfile, IUser, ResultModel } from '@shared/models';\nimport {\n  CreateArtistProfileAction,\n  CreateArtistProfileFailAction,\n  CreateArtistProfileSuccessAction,\n  CreateConsumerProfileAction,\n  CreateConsumerProfileFailAction,\n  CreateConsumerProfileSuccessAction,\n  RemoveOpenedModalAction,\n} from '@store/actions';\nimport { BWSState } from '@store/states';\nimport { catchError, map, mergeMap, of } from 'rxjs';\nimport * as UserActions from '@store/actions/user.actions';\nimport { ArtistServicesService, UserService } from '@core/services';\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    private profileService: ProfileService,\n    private userService: UserService,\n    private artistServicesService: ArtistServicesService,\n    private router: Router,\n    private store: Store<BWSState>\n  ) {}\n\n  postConsumerProfile$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CreateConsumerProfileAction),\n      mergeMap((params) =>\n        this.profileService.createConsumerProfile(params.userId).pipe(\n          map((response: ResultModel<IUser>) => {\n            if (!response.isSuccess) {\n              return CreateConsumerProfileFailAction({\n                payload: response.message,\n              });\n            }\n\n            const user = response.model;\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n\n            return CreateConsumerProfileSuccessAction({ user: response.model });\n          }),\n          catchError((error) =>\n            of(CreateConsumerProfileFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  );\n\n  postArtistProfile$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CreateArtistProfileAction),\n      mergeMap((params) =>\n        this.profileService.createArtistProfile(params.userId).pipe(\n          map((response: ResultModel<IUser>) => {\n            if (!response.isSuccess) {\n              return CreateArtistProfileFailAction({\n                payload: response.message,\n              });\n            }\n\n            const user = response.model;\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n            return CreateArtistProfileSuccessAction({ user: response.model });\n          }),\n          catchError((error) =>\n            of(CreateArtistProfileFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  );\n\n  putUpdateUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.UpdateUserAction),\n      mergeMap((params) =>\n        this.userService.updateGeneral(params.user).pipe(\n          map((response: ResultModel<IUser>) => {\n            if (!response.isSuccess) {\n              return UserActions.UpdateUserFailAction({\n                payload: response.message,\n              });\n            }\n\n            const user = response.model;\n            this.store.dispatch(UserActions.GetUserSuccessAction({ user }));\n\n            return UserActions.UpdateUserSuccessAction({\n              user: response.model,\n            });\n          }),\n          catchError((error) =>\n            of(UserActions.UpdateUserFailAction({ payload: error }))\n          )\n        )\n      )\n    )\n  );\n\n  createArtistService$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserActions.CreateArtistServiceAction),\n      mergeMap((params) =>\n        this.artistServicesService\n          .createArtistService(params.userId, params.serviceId, params.cost)\n          .pipe(\n            map((response: ResultModel<IArtistProfile>) => {\n              if (!response.isSuccess) {\n                return UserActions.CreateArtistServiceFailAction({\n                  payload: response.message,\n                });\n              }\n              this.store.dispatch(RemoveOpenedModalAction());\n              return UserActions.CreateArtistServiceSuccessAction({\n                artistProfile: response.model,\n              });\n            }),\n            catchError((error) =>\n              of(UserActions.CreateArtistServiceFailAction({ payload: error }))\n            )\n          )\n      )\n    )\n  );\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "artistServicesService",
                        "type": "ArtistServicesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "profileService",
                        "type": "ProfileService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "artistServicesService",
                        "type": "ArtistServicesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-709823ad8171e5b58e54879c797e588301c9918d3efa168cab56d83240f5c3d72f95279905ca800ffd5a9a96b20ef642e85f812c5b5412866e9f6d1a784b3790",
            "file": "src/app/_core/services/user.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "updateGeneral",
                    "args": [
                        {
                            "name": "user",
                            "type": "IUser",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultModel<IUser>>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "IUser",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { IUser, ResultModel } from '@shared/models';\nimport { Observable } from 'rxjs';\nimport { RequestService } from './request.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private requestService: RequestService) {}\n\n  updateGeneral(user: IUser): Observable<ResultModel<IUser>> {\n    return this.requestService.put<IUser>('users/update', user);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "JwtInterceptor",
            "id": "injectable-JwtInterceptor-282517feeae46c7ecfb22427532a2c48601ff6ea78a5238c76be281c0253495d596829c3393fdc31834c746f2523f0587c4e3fcd2c96625cb2c8b7aa9fb2c3bf",
            "file": "src/app/_core/interceptors/jwt.interceptor.ts",
            "properties": [
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methods": [
                {
                    "name": "handleAuthError",
                    "args": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@environment/environment';\nimport { Store } from '@ngrx/store';\nimport { BWSState } from '@store/states';\nimport { catchError, Observable, of, throwError } from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  token: string;\n  constructor(private store: Store<BWSState>) {\n    this.store.select('auth').subscribe((data) => {\n      this.token = data.token;\n    });\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const isApiUrl = request.url.startsWith(environment.baseUrl);\n    if (this.token) {\n      request = request.clone({\n        setHeaders: { Authorization: `Bearer ${this.token}` },\n      });\n    }\n\n    return next.handle(request);\n\n    //return next\n    //.handle(request)\n    //.pipe(catchError((x) => this.handleAuthError(x)));\n  }\n  private handleAuthError(err: HttpErrorResponse): Observable<any> {\n    console.log('error authorization', err);\n    if (err.status === 401 || err.status === 403) {\n      alert(\n        'La session finalizo, por favor inicia sesion de nuevo para continuar'\n      );\n      //this.sessionService.deleteSession();\n      //this.router.navigateByUrl(`/auth`);\n      return of(err.message);\n    }\n    return throwError(err);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "BWSFormGroup",
            "id": "class-BWSFormGroup-b840e20dc90a51adb2ec2095ddacf5e0d4b3ecff63ca3e6a555638465de6d3714a597c2fd009e22e41c0fd966893ceeac79000539aba85372238501b09de426c",
            "file": "src/app/_core/classes/form-group.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FormGroup } from '@angular/forms';\n\nexport abstract class BWSFormGroup extends FormGroup {\n  isSubmited?: boolean;\n}\n",
            "properties": [
                {
                    "name": "isSubmited",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "FormGroup",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MustMatchValidator",
            "id": "class-MustMatchValidator-eb8cfca58f7002af5e57536db7de02a9cab9049103b59739ac570f7abe6fdd34b74515aa7f1c120450b69642bf0b69e8568676270f8b6b892ab4974fc7412d32",
            "file": "src/app/_shared/validators/must-match.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport default class MustMatchValidator {\n  static match(password: string, confirmPassword: string): ValidatorFn {\n    return (formGroup: AbstractControl): { [key: string]: any } | null => {\n      const passwordControl = formGroup.get(password);\n      const confirmPasswordControl = formGroup.get(confirmPassword);\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (\n        confirmPasswordControl.errors &&\n        !confirmPasswordControl.errors['passwordMismatch']\n      ) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n        return { passwordMismatch: true };\n      } else {\n        confirmPasswordControl.setErrors(null);\n        return null;\n      }\n    };\n  }\n}\n\n//import { AbstractControl, ValidatorFn } from '@angular/forms';\n//export default class MustMatchValidator {\n//static match(controlName: string, checkControlName: string): ValidatorFn {\n//return (controls: AbstractControl) => {\n//const control = controls.get(controlName);\n//const checkControl = controls.get(checkControlName);\n//if (checkControl?.errors && !checkControl.errors['matching']) {\n//return null;\n//}\n//if (control?.value !== checkControl?.value) {\n//controls.get(checkControlName)?.setErrors({ matching: true });\n//return { matching: true };\n//} else {\n//return null;\n//}\n//};\n//}\n//}\n",
            "properties": [],
            "methods": [
                {
                    "name": "match",
                    "args": [
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "confirmPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "confirmPassword",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UtilEnum",
            "id": "class-UtilEnum-0a39bb5b824b7aea9b95b66b4f98447b3cb1dd5df36fc0f568224919116c327d0c84dd6e38d4584bb910ad908435cccd254776e881052154ba1efc3266249ba1",
            "file": "src/app/_shared/util/enums.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class UtilEnum {\n  static enumToArray(enumeration: any) {\n    const result: Array<{ key: string; value: any }> = [];\n    for (let key in enumeration) {\n      if (!isNaN(Number(key))) continue;\n\n      const value = enumeration[key] as string | number;\n      result.push({ key, value });\n    }\n    return result;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "enumToArray",
                    "args": [
                        {
                            "name": "enumeration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Array<{ key: string; value: any; }>",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "enumeration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e9df65ecfdad918fa641f75747314f1b482c2b8f3964b313e3da445ac62978ec15a5ccae3dba0700a7be9a0820f314c27f5d594c6f2d3fed4af97c3a69bc7998",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'BWS-WEB'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'BWS-WEB';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "DestroyHook",
            "id": "component-DestroyHook-6fd40742423d64e3e7da4240801a2029fc0cf0e2d4d890e6933de1cd33a97c9d691db07c9f76b753604603311087cd91be914b34eeb9b2a755d6c49957b303b9",
            "file": "src/app/_shared/components/base-destroy.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "unsubscribe$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n@Component({\n  template: '',\n})\nexport abstract class DestroyHook implements OnDestroy {\n  protected unsubscribe$ = new Subject();\n  ngOnDestroy(): void {\n    this.unsubscribe$.next(null);\n    this.unsubscribe$.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnDestroy"
            ]
        },
        {
            "name": "ErrorMessageComponent",
            "id": "component-ErrorMessageComponent-82ed668909ca62605cb48eff5a63c6a36899c012720a226b9b8d2d78c20cd3133c9151f8b186548fdae147dd472ecf23696e061a995752863f0a58b89781002b",
            "file": "src/app/_shared/components/error-message/error-message.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-message",
            "styleUrls": [
                "./error-message.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lastMessage$",
                    "defaultValue": "this.store$.select(getLastError)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { getLastError } from '@store/selectors';\nimport { BWSState } from '@store/states';\n\n@Component({\n  standalone: true,\n  selector: 'app-error-message',\n  imports: [CommonModule],\n  templateUrl: './error-message.component.html',\n  styleUrls: ['./error-message.component.scss'],\n})\nexport class ErrorMessageComponent {\n  lastMessage$ = this.store$.select(getLastError);\n  constructor(private store$: Store<BWSState>) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./error-message.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store$",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "store$",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p class=\"text-danger\" *ngIf=\"lastMessage$ | async\">\n  {{ lastMessage$ | async }}\n</p>\n"
        },
        {
            "name": "GeneralFormComponent",
            "id": "component-GeneralFormComponent-d8935c77d038b77ab976b0019374e8f50966600c16afac0840d30f8454fe577925d636e38624ccc0a0cc63f54c168aec7a190f9e3f71cf8d317112d7ff746080",
            "file": "src/app/onboarding/components/general-form/general-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-general-form",
            "styleUrls": [
                "./general-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./general-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "IUser",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "availableGender",
                    "defaultValue": "UtilEnum.enumToArray(GenderEnum)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "userForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BWSFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "unsubscribe$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DestroyHook"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DestroyHook"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { IUser } from '@shared/models';\nimport { BWSState } from '@store/states';\nimport * as UserActions from '@store/actions/user.actions';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { BWSFormGroup } from '@core/classes';\nimport { GenderEnum } from '@shared/enums';\nimport { UtilEnum } from '@shared/util';\nimport { DestroyHook } from '@shared/components';\n\n@Component({\n  selector: 'app-general-form',\n  templateUrl: './general-form.component.html',\n  styleUrls: ['./general-form.component.scss'],\n})\nexport class GeneralFormComponent extends DestroyHook implements OnInit {\n  @Input()\n  user: IUser;\n  userForm: BWSFormGroup;\n  availableGender = UtilEnum.enumToArray(GenderEnum);\n  constructor(private store: Store<BWSState>, private fb: FormBuilder) {\n    super();\n  }\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n  initializeForm(): void {\n    this.userForm = this.fb.group({\n      firstName: new FormControl(this.user.firstName, [Validators.required]),\n      lastName: new FormControl(this.user.lastName, [Validators.required]),\n      phone: new FormControl(this.user.phone, [Validators.required]),\n      gender: new FormControl(this.user.gender || this.availableGender[0].key, [\n        Validators.required,\n      ]),\n    });\n  }\n  submit(): void {\n    this.userForm.isSubmited = true;\n    if (!this.userForm.valid) {\n      return;\n    }\n    const updatedUser: IUser = {\n      firstName: this.userForm.value.firstName,\n      lastName: this.userForm.value.lastName,\n      phone: this.userForm.value.phone,\n      gender: this.userForm.value.gender,\n      email: null,\n      fullName: null,\n      boardingRequired: null,\n      publicId: null,\n      createdAt: null,\n      consumerProfile: this.user.consumerProfile,\n      artistProfile: this.user.artistProfile,\n    };\n    this.store.dispatch(UserActions.UpdateUserAction({ user: updatedUser }));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./general-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "DestroyHook",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container-fluid w-100\">\n  <div class=\"col-12 d-flex justify-content-center align-items-center\">\n    <div class=\"card w-50\">\n      <div class=\"card-body\">\n        <form (submit)=\"submit()\" [formGroup]=\"userForm\">\n          <div class=\"form-floating mb-3\">\n            <input\n              class=\"form-control\"\n              id=\"nombre\"\n              type=\"text\"\n              placeholder=\"Nombre\"\n              data-sb-validations=\"required\"\n              autofocus\n              formControlName=\"firstName\"\n            />\n            <label for=\"nombre\">Nombre</label>\n            <div class=\"invalid-feedback\" data-sb-feedback=\"nombre:required\">\n              Nombre es requerido.\n            </div>\n          </div>\n          <div class=\"form-floating mb-3\">\n            <input\n              class=\"form-control\"\n              id=\"apellidos\"\n              type=\"text\"\n              placeholder=\"Apellidos\"\n              data-sb-validations=\"required\"\n              formControlName=\"lastName\"\n            />\n            <label for=\"apellidos\">Apellidos</label>\n            <div class=\"invalid-feedback\" data-sb-feedback=\"apellidos:required\">\n              Apellidos es requerido.\n            </div>\n          </div>\n          <div class=\"form-floating mb-3\">\n            <input\n              class=\"form-control\"\n              id=\"telefono\"\n              type=\"text\"\n              placeholder=\"Telefono\"\n              data-sb-validations=\"required\"\n              formControlName=\"phone\"\n              [mask]=\"'(000) 000-0000'\"\n              [showMaskTyped]=\"true\"\n            />\n            <label for=\"telefono\">Telefono</label>\n            <div class=\"invalid-feedback\" data-sb-feedback=\"telefono:required\">\n              Telefono es requerido.\n            </div>\n          </div>\n          <div class=\"form-floating mb-3\">\n            <select\n              class=\"form-select\"\n              id=\"genero\"\n              aria-label=\"Genero\"\n              formControlName=\"gender\"\n            >\n              <option [value]=\"a.key\" *ngFor=\"let a of availableGender\">\n                {{ a.value }}\n              </option>\n            </select>\n            <label for=\"genero\">Guardar</label>\n          </div>\n          <div class=\"d-grid\">\n            <button\n              class=\"btn btn-primary btn-lg\"\n              id=\"submitButton\"\n              type=\"submit\"\n            >\n              Guardar\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-94bf0beaa81164475d718ede83b362e569f88b07694d6f21a5ae031a567e5d00b311545dadc08951a785d3c0787ee013e75417be51b67353cc30a368b0f42939",
            "file": "src/app/artist/home/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div\n  class=\"container-fluid page d-flex justify-content-center align-items-center\"\n>\n  <div class=\"alert alert-success\">\n    <h1>Artist Home</h1>\n  </div>\n</div>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-94bf0beaa81164475d718ede83b362e569f88b07694d6f21a5ae031a567e5d00b311545dadc08951a785d3c0787ee013e75417be51b67353cc30a368b0f42939-1",
            "file": "src/app/consumer/home/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HomeComponent-1",
            "templateData": "<div\n  class=\"container-fluid page d-flex justify-content-center align-items-center\"\n>\n  <div class=\"alert alert-info\">\n    <h1>Consumer Home</h1>\n  </div>\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-cd21e9d7741047182ad87df4b76f5f8ba542ba07b9b01ca914dc206f3b7040a0609284c7e587a1ef950504343018e6cdeb708e266b440ce05e8e4eb3e317bdf8",
            "file": "src/app/auth/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BWSFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { BWSFormGroup } from '@core/classes';\nimport { Store } from '@ngrx/store';\nimport { LoginAction } from '@store/actions';\nimport { BWSState } from '@store/states';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  loginForm: BWSFormGroup;\n  constructor(private store: Store<BWSState>, private fb: FormBuilder) {\n    this.initializeForm();\n  }\n  get form() {\n    return this.loginForm.controls;\n  }\n  initializeForm(): void {\n    this.loginForm = this.fb.group({\n      email: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      rememberMe: new FormControl(false, [Validators.required]),\n    });\n  }\n  login(): void {\n    this.loginForm.isSubmited = true;\n    if (!this.loginForm.valid) return;\n    this.store.dispatch(LoginAction({ params: this.loginForm.value }));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "form": {
                    "name": "form",
                    "getSignature": {
                        "name": "form",
                        "type": "",
                        "returnType": "",
                        "line": 18
                    }
                }
            },
            "templateData": "<div class=\"container\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-xxl-10 col-xl-10 col-lg-12\">\n      <div class=\"card card-raised shadow-10 mt-5 mt-xl-10 mb-4\">\n        <div class=\"row g-0\">\n          <div class=\"col-lg-5 col-md-6\">\n            <div class=\"card-body p-5\">\n              <!-- Auth header with logo image-->\n              <div class=\"text-center\">\n                <img\n                  class=\"mb-3\"\n                  src=\"https://aceroprime.com/wp-content/plugins/widgetkit/assets/images/content-placeholder.svg\"\n                  alt=\"...\"\n                  style=\"height: 70px; border-radius: 50px\"\n                />\n                <h1 class=\"display-5 mb-0\">Login</h1>\n                <div class=\"subheading-1 mb-5\">to continue to app</div>\n              </div>\n              <!-- Login submission form-->\n              <form\n                class=\"my-4\"\n                (submit)=\"login()\"\n                [formGroup]=\"loginForm\"\n                novalidate\n              >\n                <div class=\"form-floating mb-3\">\n                  <input\n                    class=\"form-control\"\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    formControlName=\"email\"\n                    data-sb-validations=\"required\"\n                  />\n                  <label for=\"email\">Email</label>\n                  <div\n                    class=\"invalid-feedback\"\n                    *ngIf=\"loginForm.isSubmited && form['email'].invalid\"\n                    data-sb-feedback=\"email:required\"\n                  >\n                    Email es requerido.\n                  </div>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input\n                    class=\"form-control\"\n                    id=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    formControlName=\"password\"\n                    data-sb-validations=\"required\"\n                  />\n                  <label for=\"password\">Password</label>\n                  <div\n                    class=\"invalid-feedback\"\n                    data-sb-feedback=\"password:required\"\n                    *ngIf=\"loginForm.isSubmited && form['password'].invalid\"\n                  >\n                    Password es requerido.\n                  </div>\n                </div>\n                <div class=\"mb-3 text-end\">\n                  <label class=\"form-label d-block\"></label>\n                  <div class=\"form-check form-check-inline\">\n                    <input\n                      class=\"form-check-input\"\n                      id=\"recordarme\"\n                      type=\"checkbox\"\n                      name=\"\"\n                      formControlName=\"rememberMe\"\n                      data-sb-validations=\"\"\n                    />\n                    <label class=\"form-check-label\" for=\"recordarme\"\n                      >Recordarme</label\n                    >\n                  </div>\n                </div>\n                <app-error-message></app-error-message>\n                <div class=\"d-grid mt-5\">\n                  <button\n                    class=\"btn btn-primary btn-lg\"\n                    id=\"submitButton\"\n                    type=\"submit\"\n                  >\n                    Entrar\n                  </button>\n                </div>\n              </form>\n\n              <!-- Auth card message-->\n              <div class=\"text-center\">\n                <a\n                  class=\"small fw-500 text-decoration-none\"\n                  [routerLink]=\"'signin'\"\n                  >Nuevo usuario? Crea tu cuenta!</a\n                >\n              </div>\n            </div>\n          </div>\n          <!-- Background image column using inline CSS-->\n          <div\n            class=\"col-lg-7 col-md-6 d-none d-md-block\"\n            style=\"\n              background-image: url('https://source.unsplash.com/-uHVRvDr7pg/1600x900');\n              background-size: cover;\n              background-repeat: no-repeat;\n              background-position: center;\n            \"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "NavbarArtistComponent",
            "id": "component-NavbarArtistComponent-40030689c626235ba130b70d390e3360f2269377da5d389fc563e876f456fba5ac3467e4446ae81a33cedf662fbaaac3020bf5f4b3774ccf7d67c92096d469cc",
            "file": "src/app/_shared/components/layout/navbar-artist/navbar-artist.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar-artist",
            "styleUrls": [
                "./navbar-artist.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar-artist.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar-artist',\n  templateUrl: './navbar-artist.component.html',\n  styleUrls: ['./navbar-artist.component.scss']\n})\nexport class NavbarArtistComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navbar-artist.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-bs-toggle=\"collapse\"\n    data-bs-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Link</a>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-link dropdown-toggle\"\n          href=\"#\"\n          role=\"button\"\n          data-bs-toggle=\"dropdown\"\n          aria-expanded=\"false\"\n        >\n          Dropdown\n        </a>\n        <ul class=\"dropdown-menu\">\n          <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n          <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n          <li><hr class=\"dropdown-divider\" /></li>\n          <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n        </ul>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\">Disabled</a>\n      </li>\n    </ul>\n    <form class=\"d-flex\" role=\"search\">\n      <input\n        class=\"form-control me-2\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n      />\n      <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n    </form>\n  </div>\n</div>\n"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-e71ef0df7aef6805bf031cdf8b1f3ea9fe1f47cd2057d5f2fb284871f430ddd38f774ee9d167ab941d4b74b6a8835d8b5b4a5405d2ee0ff298a5eb6baf9ae8e8",
            "file": "src/app/_shared/components/layout/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "app",
                    "defaultValue": "APP",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { APP } from '@shared/constants';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent {\n  app = APP;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nav class=\"navbar navbar-expand-lg bg-body-tertiary bg-primary\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">{{ app.NAME }}</a>\n    <app-navbar-artist></app-navbar-artist>\n  </div>\n</nav>\n"
        },
        {
            "name": "NavbarConsumerComponent",
            "id": "component-NavbarConsumerComponent-318b6ef8a841540737b7bd4c2ff4f0f243420d15fc4bd4db71e05dc9f39f9f376ff0c6538f8b507fc7fa11e490ff0c35a6625b0ce617e2b44b735d8d4e4be972",
            "file": "src/app/_shared/components/layout/navbar-consumer/navbar-consumer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar-consumer",
            "styleUrls": [
                "./navbar-consumer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar-consumer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar-consumer',\n  templateUrl: './navbar-consumer.component.html',\n  styleUrls: ['./navbar-consumer.component.scss']\n})\nexport class NavbarConsumerComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navbar-consumer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>navbar-consumer works!</p>\n"
        },
        {
            "name": "OnboardingComponent",
            "id": "component-OnboardingComponent-7a003af4f0c01402440c567337616eca8c0e63aee0975e992c20fc607c37795f7789dc1600121438e89662ca4ab39ca9b088954f909ae55992354783afb1f001",
            "file": "src/app/onboarding/pages/onboarding/onboarding.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-onboarding",
            "styleUrls": [
                "./onboarding.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./onboarding.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICategory[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "currentStep",
                    "defaultValue": "OnboardingStepsEnum.profile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OnboardingStepsEnum",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUser",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "unsubscribe$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DestroyHook"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "generateArtistOnboardingStep",
                    "args": [],
                    "optional": false,
                    "returnType": "OnboardingStepsEnum",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "generateConsumerOnboardingStep",
                    "args": [],
                    "optional": false,
                    "returnType": "OnboardingStepsEnum",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "updateCurrentStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DestroyHook"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { OnboardingStepsEnum } from '@shared/enums';\nimport { ICategory, IUser } from '@shared/models';\nimport { BWSState } from '@store/states';\nimport * as ProviderActions from '@store/actions/provider.actions';\nimport { getCategories, getUser } from '@store/selectors';\nimport { takeUntil } from 'rxjs';\nimport { DestroyHook } from '@shared/components';\n\n@Component({\n  selector: 'app-onboarding',\n  templateUrl: './onboarding.component.html',\n  styleUrls: ['./onboarding.component.scss'],\n})\nexport class OnboardingComponent extends DestroyHook {\n  user: IUser;\n  currentStep: OnboardingStepsEnum = OnboardingStepsEnum.profile;\n  categories: ICategory[];\n  constructor(private store$: Store<BWSState>, private router: Router) {\n    super();\n    this.store$.dispatch(ProviderActions.GetCategoriesAction());\n    this.store$\n      .select(getUser)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((data) => {\n        this.user = data;\n        this.updateCurrentStep();\n      });\n\n    this.store$\n      .select(getCategories)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((data) => {\n        this.categories = data;\n      });\n  }\n  updateCurrentStep(): void {\n    let newStep: OnboardingStepsEnum;\n    if (!this.user.artistProfile && !this.user.consumerProfile) {\n      newStep = OnboardingStepsEnum.profile;\n    } else {\n      newStep = this.user.consumerProfile\n        ? this.generateConsumerOnboardingStep()\n        : this.generateArtistOnboardingStep();\n    }\n    this.currentStep = newStep;\n    if (this.currentStep == OnboardingStepsEnum.none) {\n      if (this.user.artistProfile) {\n        this.router.navigate(['/2']);\n      } else if (this.user.consumerProfile) {\n        this.router.navigate(['/2']);\n      }\n    }\n  }\n\n  private generateConsumerOnboardingStep(): OnboardingStepsEnum {\n    let step: OnboardingStepsEnum;\n    if (!this.user.fullName || this.user.fullName === '') {\n      step = OnboardingStepsEnum.general;\n    } else {\n      step = OnboardingStepsEnum.none;\n    }\n    return step;\n  }\n  private generateArtistOnboardingStep(): OnboardingStepsEnum {\n    let step: OnboardingStepsEnum;\n    if (!this.user.fullName || this.user.fullName === '') {\n      step = OnboardingStepsEnum.general;\n    } else if (\n      !this.user.artistProfile.services ||\n      this.user.artistProfile.services.length == 0\n    ) {\n      step = OnboardingStepsEnum.services;\n    } else {\n      step = OnboardingStepsEnum.none;\n    }\n    return step;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./onboarding.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store$",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "store$",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "DestroyHook",
            "templateData": "<app-navbar></app-navbar>\n<div\n  class=\"container-fliuid page d-flex justify-content-center align-items-center\"\n>\n  <div class=\"col-12\" [ngSwitch]=\"currentStep\">\n    <app-profile-form\n      *ngSwitchCase=\"'profile'\"\n      [user]=\"user\"\n    ></app-profile-form>\n    <app-general-form\n      [user]=\"user\"\n      *ngSwitchCase=\"'general'\"\n    ></app-general-form>\n    <app-services-form\n      [user]=\"user\"\n      *ngSwitchCase=\"'services'\"\n    ></app-services-form>\n    <div *ngSwitchDefault>Onboarding Page</div>\n  </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ProfileFormComponent",
            "id": "component-ProfileFormComponent-d630b926c8f6f771050922ff107cb6e652ea92fd73e7c3dde2718c86b918bbf298ec014e307b65de53532d6e647c2157ff031359d617086ee717a4f6dc699a29",
            "file": "src/app/onboarding/components/profile-form/profile-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile-form",
            "styleUrls": [
                "./profile-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "IUser",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "unsubscribe$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DestroyHook"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createArtistProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createConsumerProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DestroyHook"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { IUser } from '@shared/models';\nimport { BWSState } from '@store/states';\nimport * as UserActions from '@store/actions/user.actions';\nimport { DestroyHook } from '@shared/components';\n\n@Component({\n  selector: 'app-profile-form',\n  templateUrl: './profile-form.component.html',\n  styleUrls: ['./profile-form.component.scss'],\n})\nexport class ProfileFormComponent extends DestroyHook implements OnInit {\n  @Input()\n  user: IUser;\n  constructor(private store: Store<BWSState>) {\n    super();\n  }\n  ngOnInit(): void {}\n\n  createConsumerProfile(): void {\n    this.store.dispatch(\n      UserActions.CreateConsumerProfileAction({ userId: this.user.publicId })\n    );\n  }\n  createArtistProfile(): void {\n    this.store.dispatch(\n      UserActions.CreateArtistProfileAction({ userId: this.user.publicId })\n    );\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./profile-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "DestroyHook",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"d-flex justify-content-around\">\n  <button class=\"card\" (click)=\"createConsumerProfile()\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Busco Servicios</h5>\n      <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\n      <p class=\"card-text\">\n        Some quick example text to build on the card title and make up the bulk\n        of the card's content.\n      </p>\n    </div>\n  </button>\n\n  <button class=\"card\" (click)=\"createArtistProfile()\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Brindo Servicios</h5>\n      <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\n      <p class=\"card-text\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n      </p>\n    </div>\n  </button>\n</div>\n"
        },
        {
            "name": "ServicesFormComponent",
            "id": "component-ServicesFormComponent-14ac782ec6076a7366b2ae7aa1bdba0cbec8997d8da7d8a34596a20706545fa8a9d059603e2bb887ff77ce62ea4e7b278b5b2999785745c0097c08225e384b64",
            "file": "src/app/onboarding/components/services-form/services-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-services-form",
            "styleUrls": [
                "./services-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./services-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "IUser",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ICategory[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "closeResult",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "services",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IService[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "unsubscribe$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DestroyHook"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createService",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "open",
                    "args": [
                        {
                            "name": "content",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "content",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectCategory",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DestroyHook"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Store } from '@ngrx/store';\nimport { DestroyHook } from '@shared/components';\nimport { ICategory, IService, IUser } from '@shared/models';\nimport {\n  CreateArtistServiceAction,\n  GetServicesAction,\n  SetOpenedModalAction,\n} from '@store/actions';\nimport { getCategories, getServices } from '@store/selectors';\nimport { BWSState } from '@store/states';\nimport { takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-services-form',\n  templateUrl: './services-form.component.html',\n  styleUrls: ['./services-form.component.scss'],\n})\nexport class ServicesFormComponent extends DestroyHook implements OnInit {\n  @Input()\n  user: IUser;\n  categories: ICategory[];\n\n  services: IService[];\n  form: FormGroup;\n\n  closeResult = '';\n  constructor(\n    private modalService: NgbModal,\n    private store$: Store<BWSState>,\n    private fb: FormBuilder\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.initializeForm();\n\n    this.store$\n      .select(getCategories)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((data) => {\n        this.categories = data;\n      });\n\n    this.store$\n      .select(getServices)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((data) => {\n        this.services = data;\n        if (this.services && this.services.length > 0)\n          this.form.patchValue({ service: this.services[0].publicId });\n      });\n  }\n  initializeForm(): void {\n    this.form = this.fb.group({\n      category: new FormControl(0, [Validators.required]),\n      service: new FormControl(null, [Validators.required]),\n      cost: new FormControl(0, [Validators.required, Validators.min(1)]),\n    });\n  }\n\n  selectCategory(value: any): void {\n    this.store$.dispatch(GetServicesAction({ category: value }));\n  }\n  createService(): void {\n    if (this.form.valid) {\n      this.store$.dispatch(\n        CreateArtistServiceAction({\n          userId: this.user.publicId,\n          serviceId: this.form.value.service,\n          cost: this.form.value.cost,\n        })\n      );\n    }\n  }\n\n  open(content) {\n    const modal = this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title',\n    });\n    this.store$.dispatch(SetOpenedModalAction());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./services-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store$",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store$",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "DestroyHook",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container-fluid w-100\">\n  <div class=\"col-12 d-flex justify-content-center align-items-center\">\n    <div class=\"card w-50\">\n      <div class=\"card-body\">\n        aqui se ven los services que ya agrego O que no tiene servicios aun\n      </div>\n      <div class=\"card-footer\">\n        <button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(content)\">\n          Launch demo modal\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #content let-modal>\n  <form [formGroup]=\"form\" (submit)=\"createService()\">\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Profile update</h4>\n      <button\n        type=\"button\"\n        class=\"btn-close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss('Cross click')\"\n      ></button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-floating mb-3\">\n        <select\n          class=\"form-select\"\n          (ngModelChange)=\"selectCategory($event)\"\n          id=\"categoria\"\n          aria-label=\"Categoria\"\n          formControlName=\"category\"\n        >\n          <option value=\"0\">Selecciona una Categoria</option>\n          <option [value]=\"c.publicId\" *ngFor=\"let c of categories\">\n            {{ c.displayName }}\n          </option>\n        </select>\n        <label for=\"categoria\">Categoria</label>\n      </div>\n      <div class=\"form-floating mb-3\">\n        <select\n          class=\"form-select\"\n          id=\"servicio\"\n          aria-label=\"Servicio\"\n          formControlName=\"service\"\n          [disabled]=\"true\"\n        >\n          <option [value]=\"c.publicId\" *ngFor=\"let c of services\">\n            {{ c.displayName }}\n          </option>\n        </select>\n        <label for=\"servicio\">Servicio</label>\n      </div>\n      <div class=\"form-floating mb-3\">\n        <input\n          class=\"form-control\"\n          id=\"precio\"\n          type=\"number\"\n          placeholder=\"Precio\"\n          data-sb-validations=\"required\"\n          formControlName=\"cost\"\n        />\n        <label for=\"precio\">Precio</label>\n        <div class=\"invalid-feedback\" data-sb-feedback=\"precio:required\">\n          Precio is required.\n        </div>\n      </div>\n      <div class=\"d-none\" id=\"submitSuccessMessage\">\n        <div class=\"text-center mb-3\">\n          <div class=\"fw-bolder\">Form submission successful!</div>\n          <p>To activate this form, sign up at</p>\n          <a href=\"https://startbootstrap.com/solution/contact-forms\"\n            >https://startbootstrap.com/solution/contact-forms</a\n          >\n        </div>\n      </div>\n      <div class=\"d-none\" id=\"submitErrorMessage\">\n        <div class=\"text-center text-danger mb-3\">Error sending message!</div>\n      </div>\n      <div class=\"d-grid\">\n        <button class=\"btn btn-primary btn-lg\" id=\"submitButton\" type=\"submit\">\n          Guardar\n        </button>\n      </div>\n    </div>\n    <!--<div class=\"modal-footer\">-->\n    <!--<button-->\n    <!--type=\"submit\"-->\n    <!--class=\"btn btn-outline-dark\"-->\n    <!--(click)=\"modal.close('Save click')\"-->\n    <!-->-->\n    <!--Save-->\n    <!--</button>-->\n    <!--</div>-->\n  </form>\n</ng-template>\n"
        },
        {
            "name": "SigninComponent",
            "id": "component-SigninComponent-520d79a9521333c1974f8352bb3d9a3a45a7eef28a9359c38bfbc0f8572c5c19fafd71fc2ac81431ba57abc92a5be7a0d5fd866e01b10263b9bbc78c3da3b549",
            "file": "src/app/auth/pages/signin/signin.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signin",
            "styleUrls": [
                "./signin.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signin.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "signInForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BWSFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { BWSFormGroup } from '@core/classes';\nimport { Store } from '@ngrx/store';\nimport MustMatchValidator from '@shared/validators/must-match.validator';\nimport { SigninAction } from '@store/actions';\nimport { BWSState } from '@store/states';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss'],\n})\nexport class SigninComponent {\n  signInForm: BWSFormGroup;\n  constructor(private store: Store<BWSState>, private fb: FormBuilder) {\n    this.initializeForm();\n  }\n  get form() {\n    return this.signInForm.controls;\n  }\n  initializeForm(): void {\n    this.signInForm = this.fb.group(\n      {\n        email: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n        confirmPassword: new FormControl(\n          '',\n          Validators.compose([Validators.required])\n        ),\n        rememberMe: new FormControl(false, [Validators.required]),\n      },\n      {\n        validator: MustMatchValidator.match('password', 'confirmPassword'),\n      }\n    );\n  }\n  signin(): void {\n    this.signInForm.isSubmited = true;\n    if (!this.signInForm.valid) return;\n\n    const params = this.signInForm.value;\n    delete params.confirmPassword;\n    this.store.dispatch(SigninAction({ params }));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./signin.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<BWSState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "form": {
                    "name": "form",
                    "getSignature": {
                        "name": "form",
                        "type": "",
                        "returnType": "",
                        "line": 19
                    }
                }
            },
            "templateData": "<div class=\"container\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-xxl-10 col-xl-10 col-lg-12\">\n      <div class=\"card card-raised shadow-10 mt-5 mt-xl-10 mb-4\">\n        <div class=\"row g-0\">\n          <div class=\"col-lg-5 col-md-6\">\n            <div class=\"card-body p-5\">\n              <!-- Auth header with logo image-->\n              <div class=\"text-center\">\n                <img\n                  class=\"mb-3\"\n                  src=\"https://aceroprime.com/wp-content/plugins/widgetkit/assets/images/content-placeholder.svg\"\n                  alt=\"...\"\n                  style=\"height: 70px; border-radius: 50px\"\n                />\n                <h1 class=\"display-5 mb-0\">Signin</h1>\n                <div class=\"subheading-1 mb-5\">to continue to app</div>\n              </div>\n\n              <form (submit)=\"signin()\" [formGroup]=\"signInForm\" novalidate>\n                <div class=\"mb-3 form-floating\">\n                  <input\n                    class=\"form-control\"\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    formControlName=\"email\"\n                    data-sb-validations=\"required\"\n                    autofocus\n                  />\n                  <label for=\"exampleFormControlInput1\" class=\"form-label\"\n                    >Email</label\n                  >\n\n                  <div\n                    *ngIf=\"signInForm.isSubmited && form['email'].invalid\"\n                    class=\"invalid-feedback\"\n                  >\n                    Email requerido\n                  </div>\n                </div>\n                <div class=\"mb-3 form-floating\">\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    id=\"pswInput\"\n                    placeholder=\"Password\"\n                    formControlName=\"password\"\n                  />\n                  <label for=\"pwsInput\" class=\"form-label\">Password</label>\n\n                  <div\n                    *ngIf=\"signInForm.isSubmited && form['password'].invalid\"\n                    class=\"invalid-feedback\"\n                  >\n                    Password requerido\n                  </div>\n                </div>\n                <div class=\"mb-3 form-floating\">\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    id=\"copaInput\"\n                    placeholder=\"Confirmar Password\"\n                    formControlName=\"confirmPassword\"\n                  />\n                  <label for=\"copaInput\" class=\"form-label\"\n                    >Confirmar Password</label\n                  >\n\n                  <div\n                    *ngIf=\"\n                      signInForm.isSubmited &&\n                      form['confirmPassword'].invalid &&\n                      form['confirmPassword'].errors\n                    \"\n                    class=\"invalid-feedback\"\n                  >\n                    <span\n                      *ngIf=\"form['confirmPassword'].errors['passwordMismatch']\"\n                      >Las contrasenas no coinciden\n                    </span>\n                    <span *ngIf=\"form['confirmPassword'].errors['required']\"\n                      >Confirmar password requerido\n                    </span>\n                  </div>\n                </div>\n\n                <app-error-message></app-error-message>\n                <div class=\"mb-3 mt-5 text-center\">\n                  <button class=\"btn btn-primary w-75\" type=\"submit\">\n                    Crear Cuenta\n                  </button>\n                </div>\n              </form>\n\n              <!-- Auth card message-->\n              <div class=\"text-center mt-5\">\n                <a class=\"small fw-500 text-decoration-none\" [routerLink]=\"'/'\"\n                  >Ya tienes cuenta? Accede ahora!</a\n                >\n              </div>\n            </div>\n          </div>\n          <!-- Background image column using inline CSS-->\n          <div\n            class=\"col-lg-7 col-md-6 d-none d-md-block\"\n            style=\"\n              background-image: url('https://source.unsplash.com/-uHVRvDr7pg/1600x900');\n              background-size: cover;\n              background-repeat: no-repeat;\n              background-position: center;\n            \"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--<div class=\"container-fluid page\">-->\n<!--<div-->\n<!--class=\"col-12 d-flex justify-content-center align-items-center h-100 w-100\"-->\n<!-->-->\n<!--<div class=\"card\">-->\n<!--<div class=\"card-body\">-->\n<!--<h5 class=\"card-title text-center\">Sign In</h5>-->\n<!--<p class=\"card-text\">-->\n<!--Lorem ipsum dolor sit amet, consectetur adipiscing elit.-->\n<!--</p>-->\n<!--</div>-->\n<!--<div class=\"card-body\">-->\n<!--<form (submit)=\"signin()\" [formGroup]=\"signInForm\" novalidate>-->\n<!--<div class=\"mb-3 form-floating\">-->\n<!--<input-->\n<!--class=\"form-control\"-->\n<!--id=\"email\"-->\n<!--type=\"email\"-->\n<!--placeholder=\"Email\"-->\n<!--formControlName=\"email\"-->\n<!--data-sb-validations=\"required\"-->\n<!--autofocus-->\n<!--/>-->\n<!--<label for=\"exampleFormControlInput1\" class=\"form-label\"-->\n<!-->Email</label-->\n<!-->-->\n\n<!--<div-->\n<!--*ngIf=\"signInForm.isSubmited && form['email'].invalid\"-->\n<!--class=\"invalid-feedback\"-->\n<!-->-->\n<!--Email requerido-->\n<!--</div>-->\n<!--</div>-->\n<!--<div class=\"mb-3 form-floating\">-->\n<!--<input-->\n<!--type=\"password\"-->\n<!--class=\"form-control\"-->\n<!--id=\"pswInput\"-->\n<!--placeholder=\"Password\"-->\n<!--formControlName=\"password\"-->\n<!--/>-->\n<!--<label for=\"pwsInput\" class=\"form-label\">Password</label>-->\n\n<!--<div-->\n<!--*ngIf=\"signInForm.isSubmited && form['password'].invalid\"-->\n<!--class=\"invalid-feedback\"-->\n<!-->-->\n<!--Password requerido-->\n<!--</div>-->\n<!--</div>-->\n<!--<div class=\"mb-3 form-floating\">-->\n<!--<input-->\n<!--type=\"password\"-->\n<!--class=\"form-control\"-->\n<!--id=\"copaInput\"-->\n<!--placeholder=\"Confirmar Password\"-->\n<!--formControlName=\"confirmPassword\"-->\n<!--/>-->\n<!--<label for=\"copaInput\" class=\"form-label\">Confirmar Password</label>-->\n\n<!--<div-->\n<!--*ngIf=\"-->\n<!--signInForm.isSubmited &&-->\n<!--form['confirmPassword'].invalid &&-->\n<!--form['confirmPassword'].errors-->\n<!--\"-->\n<!--class=\"invalid-feedback\"-->\n<!-->-->\n<!--<span *ngIf=\"form['confirmPassword'].errors['passwordMismatch']\"-->\n<!-->Las contrasenas no coinciden-->\n<!--</span>-->\n<!--<span *ngIf=\"form['confirmPassword'].errors['required']\"-->\n<!-->Confirmar password requerido-->\n<!--</span>-->\n<!--</div>-->\n<!--</div>-->\n\n<!--<app-error-message></app-error-message>-->\n<!--<div class=\"mb-3 text-center\">-->\n<!--<button class=\"btn btn-primary w-75\" type=\"submit\">-->\n<!--Crear Cuenta-->\n<!--</button>-->\n<!--</div>-->\n<!--</form>-->\n<!--</div>-->\n\n<!--<div-->\n<!--class=\"card-footer d-flex justify-content-between align-items-center bg-white border-0\"-->\n<!-->-->\n<!--<small class=\"text-muted\">text fancy aqui</small>-->\n<!--<a [routerLink]=\"''\" class=\"btn btn-link\">Ya tengo cuenta</a>-->\n<!--</div>-->\n<!--</div>-->\n<!--</div>-->\n<!--</div>-->\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-0df0a97bbe43b6c6496d48d8d587f0e0bc237daf474af08885dde57e907a62a07e947dc6d9dbea4664e807eacb217ff9e4596f4527c038398cd710804762ce20",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { JwtInterceptor } from '@core/interceptors';\nimport { BWSStoreModule } from '@store/store.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BWSStoreModule,\n    NgbModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "JwtInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "BWSStoreModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4a9a7ac5e0e638d07e997cb7aa392732b3c4cf9ab4848f3e49a9f341e9c663e7e596f2bd100de5b9b2b5d1f10661a1d3ae94c7e61416b71f8d38fdb16f8d4094",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'onboarding',\n    loadChildren: () =>\n      \"import('./onboarding/onboarding.module').then((m) => m.OnboardingModule)\",\n  },\n  {\n    path: '1',\n    loadChildren: () =>\n      \"import('./consumer/consumer.module').then((m) => m.ConsumerModule)\",\n  },\n  {\n    path: '2',\n    loadChildren: () =>\n      \"import('./artist/artist.module').then((m) => m.ArtistModule)\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ArtistModule",
            "id": "module-ArtistModule-8acb07f41b263ce60bd6cbe5263abc1198a8d2c1c2a3b900e64bbff2c445dc80a2097952c3fdbb9f5a74996f27c2907e0145a28c68f18feef655d5404cd6ca3b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/artist/artist.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ArtistRoutingModule } from './artist-routing.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ArtistRoutingModule\n  ]\n})\nexport class ArtistModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ArtistRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ArtistRoutingModule",
            "id": "module-ArtistRoutingModule-16bbfa646951ce715be6ba3a38ae81d22de57e5ba384a16091482ba0af5ca6fd1493059f6bf479eea80bec4decf5b40f7329292974ee2a66fcf2206f52fc92f7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/artist/artist-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('./home/home.module').then((m) => m.HomeModule)\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ArtistRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-c10f59455414c5bd8e284bb1cb4bcfb076721bcf26df8f61f722f604dd161552f6f12df800a84d88d244a6a3a76ee16c88d38e285b6b8f408511d98117d709c7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './pages/login/login.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ErrorMessageComponent } from '@shared/components/error-message/error-message.component';\n\n@NgModule({\n  declarations: [LoginComponent, SigninComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    ErrorMessageComponent,\n  ],\n})\nexport class AuthModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "SigninComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRoutingModule"
                        },
                        {
                            "name": "ErrorMessageComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRoutingModule",
            "id": "module-AuthRoutingModule-b49d9644d1f7138ebae383ecff90083cf837820a3e5792690fd559130d0641b035e9fd2982b68b2ec1ccc640c792713d661506f46138671c1b4bcb38782f7eb1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { SigninComponent } from './pages/signin/signin.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'signin', component: SigninComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BWSStoreModule",
            "id": "module-BWSStoreModule-c3bb010bc461c9a91dcaee285b83769ff652c1d7237094fd3d202762bee5da3b913d5e4f246ab72a44480a6b11bdc2947fe8ed6e64b7288d1463a0aa9dece554",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/store/store.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { environment } from '@environment/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { effects } from './effects';\nimport { reducers } from './reducers';\n\nlet imports = [StoreModule.forRoot(reducers), EffectsModule.forRoot(effects)];\nlet providers: any[] = [];\nlet declarations: any[] = [];\n\nif (!environment.production) {\n  imports = [...imports, StoreDevtoolsModule.instrument({ maxAge: 500 })];\n}\n\n@NgModule({\n  imports,\n  providers,\n  declarations,\n})\nexport class BWSStoreModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ConsumerModule",
            "id": "module-ConsumerModule-8c0164eee9378c52bc383f642dcfd0500e2b0359f882a89413ac7e5e0be01c30a70b0e59ac9a2b62097b35ca1c08725772c1fad64c1172991baa8acf99bec98f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/consumer/consumer.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConsumerRoutingModule } from './consumer-routing.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ConsumerRoutingModule\n  ]\n})\nexport class ConsumerModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ConsumerRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ConsumerRoutingModule",
            "id": "module-ConsumerRoutingModule-cf55584176dbdd9dbfd65fbc2b502ab4f83e608b0abb74090c48feebe435869fd8624133e1cb9e8009014336c9095f5d88c1a63979b436bae0c95723a21b4c10",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/consumer/consumer-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('./home/home.module').then((m) => m.HomeModule)\",\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConsumerRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ConsumerStoreModule",
            "id": "module-ConsumerStoreModule-a7a98eef44ff6a87fb1f1572d22b45e01364469eb085b3d0083225a7cf0fd37c4c7224f2b708432a569beb4139d0a4610307995a040f3c7844c11c81e188b89f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/consumer/store/consumer-store.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\n@NgModule({\n  //imports: [StoreModule.forFeature([]), EffectsModule.forFeature()],\n  imports: [],\n  providers: [],\n  declarations: [],\n})\nexport class ConsumerStoreModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-ef680953248da486c06f0901c2fb52315281ed9f7339862d51cea05b5ba3d350a4047b86cecd9ef7138213a75c1c703f557a57793bfd4d76b079455a1e4e8840",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/_core/core.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [HttpClientModule],\n  declarations: [],\n  exports: [],\n})\nexport class CoreModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-62e625f90dca26fdb07e541c3d6f3195faf2e6107e135db8f6c7185029a48286d0c7029ee11759fd3db9f48ff0da0011da4c9da109e13ce7435cfdb0d68e8108",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/artist/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './pages/home/home.component';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule\n  ]\n})\nexport class HomeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomeRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-62e625f90dca26fdb07e541c3d6f3195faf2e6107e135db8f6c7185029a48286d0c7029ee11759fd3db9f48ff0da0011da4c9da109e13ce7435cfdb0d68e8108-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/consumer/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './pages/home/home.component';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule\n  ]\n})\nexport class HomeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomeRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeRoutingModule",
            "id": "module-HomeRoutingModule-fac9380dd2930010610cebfec57f6cfd64f6e278159d08a9c2b5b77d170c4972a2f46397767b2b05fe9251a342aee4b21de13698873aba0832c496f548387c55",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/artist/home/home-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeRoutingModule",
            "id": "module-HomeRoutingModule-fac9380dd2930010610cebfec57f6cfd64f6e278159d08a9c2b5b77d170c4972a2f46397767b2b05fe9251a342aee4b21de13698873aba0832c496f548387c55-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/consumer/home/home-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OnboardingModule",
            "id": "module-OnboardingModule-a14c0fe50b3bc379000fec45576da47f7a6f50221269722ea0656e3d516f87c480858f1b20194ded9dfafe8a79e14d32e412047a2670e004dc3c4e9cfbd81ebe",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/onboarding/onboarding.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OnboardingRoutingModule } from './onboarding-routing.module';\nimport { OnboardingComponent } from './pages/onboarding/onboarding.component';\nimport { ProfileFormComponent } from './components/profile-form/profile-form.component';\nimport { GeneralFormComponent } from './components/general-form/general-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  NgxMaskDirective,\n  NgxMaskPipe,\n  provideEnvironmentNgxMask,\n} from 'ngx-mask';\nimport { ServicesFormComponent } from './components/services-form/services-form.component';\nimport { SharedModule } from '@shared/shared.module';\n\n@NgModule({\n  declarations: [\n    OnboardingComponent,\n    ProfileFormComponent,\n    GeneralFormComponent,\n    ServicesFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    OnboardingRoutingModule,\n    ReactiveFormsModule,\n    NgxMaskDirective,\n    NgxMaskPipe,\n    SharedModule,\n  ],\n  providers: [provideEnvironmentNgxMask()],\n})\nexport class OnboardingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GeneralFormComponent"
                        },
                        {
                            "name": "OnboardingComponent"
                        },
                        {
                            "name": "ProfileFormComponent"
                        },
                        {
                            "name": "ServicesFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "OnboardingRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OnboardingRoutingModule",
            "id": "module-OnboardingRoutingModule-0b77c18d77e02f5d12fa66afb1958609e3d7334892baa4ff124c954c69f4c478df4aa7d52aea775e2d8f7e75225d24206753ea0004cdde2d18e0fa25a6322fb1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/onboarding/onboarding-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OnboardingComponent } from './pages/onboarding/onboarding.component';\n\nconst routes: Routes = [{ path: '', component: OnboardingComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OnboardingRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-f95210e8d30d527bee13985ad85cdebb210b60c9b7387a94e8757768ba894f6a011450f2f79ef38aef61ed9b6ebcf8346e974649c348a670c968254ed5343bca",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/_shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport {\n  NavbarArtistComponent,\n  NavbarComponent,\n  NavbarConsumerComponent,\n} from './components/layout';\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n    NavbarArtistComponent,\n    NavbarConsumerComponent,\n  ],\n  imports: [],\n  exports: [NavbarComponent],\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NavbarArtistComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "NavbarConsumerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavbarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_authReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createRehydrateReducer(\n  FEATURE_NAME.AUTH,\n  initialState,\n  on(AuthActions.LoginAction, (state) => {\n    return state;\n  }),\n  on(AuthActions.LoginSuccessAction, (state, { session }) => {\n    return {\n      ...state,\n      token: session.token,\n    };\n  }),\n  on(AuthActions.SigninAction, (state) => {\n    return state;\n  }),\n\n  on(AuthActions.SigninSuccessAction, (state, { session }) => {\n    return {\n      ...state,\n      token: session.token,\n    };\n  })\n)"
            },
            {
                "name": "_errorReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/error.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createRehydrateReducer(\n  FEATURE_NAME.ERROR,\n  initialState,\n  on(ErrorActions.SetErrorAction, (state, { error }) => {\n    return {\n      ...state,\n      lastError: error,\n    };\n  }),\n  on(ErrorActions.CleanErrorAction, (state) => {\n    return {\n      ...state,\n      lastError: null,\n    };\n  })\n)"
            },
            {
                "name": "_providerReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/provider.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createRehydrateReducer(\n  FEATURE_NAME.PROVIDER,\n  initialState,\n  on(ProviderActions.GetServicesAction, (state, { category }) => {\n    return {\n      ...state,\n    };\n  }),\n  on(ProviderActions.GetServicesSuccessAction, (state, { services }) => {\n    return {\n      ...state,\n      services,\n    };\n  }),\n\n  on(ProviderActions.GetServicesFailAction, (state, { payload }) => {\n    return {\n      ...state,\n    };\n  }),\n\n  //CATEGORIES\n  on(ProviderActions.GetCategoriesAction, (state) => {\n    return {\n      ...state,\n    };\n  }),\n  on(ProviderActions.GetCategoriesSuccessAction, (state, { categories }) => {\n    return {\n      ...state,\n      categories,\n    };\n  }),\n  on(ProviderActions.GetCategoriesFailAction, (state, { payload }) => {\n    return {\n      ...state,\n    };\n  })\n)"
            },
            {
                "name": "_uiReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/ui.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(UI_Actions.SetOpenedModalAction, (state) => {\n    return {\n      ...state,\n      modal: true,\n    };\n  }),\n  on(UI_Actions.RemoveOpenedModalAction, (state) => {\n    return {\n      ...state,\n      modal: false,\n    };\n  })\n)"
            },
            {
                "name": "_userReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/user.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createRehydrateReducer(\n  FEATURE_NAME.USER,\n  initialState,\n  on(UserActions.CreateArtistServiceAction, (state) => {\n    return {\n      ...state,\n    };\n  }),\n  on(\n    UserActions.CreateArtistServiceSuccessAction,\n    (state, { artistProfile }) => {\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          artistProfile,\n        },\n      };\n    }\n  ),\n  on(UserActions.CreateArtistServiceFailAction, (state, payload) => {\n    return {\n      ...state,\n    };\n  }),\n\n  on(UserActions.UpdateUserAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  }),\n  on(UserActions.UpdateUserSuccessAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  }),\n  on(UserActions.UpdateUserFailAction, (state, { payload }) => {\n    return {\n      ...state,\n    };\n  }),\n\n  on(UserActions.GetUserSuccessAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  }),\n  on(UserActions.GetUserFailAction, (state, { payload }) => {\n    return {\n      ...state,\n    };\n  }),\n  on(UserActions.CreateConsumerProfileAction, (state, { userId: string }) => {\n    return {\n      ...state,\n    };\n  }),\n  on(UserActions.CreateConsumerProfileSuccessAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  }),\n\n  on(UserActions.CreateArtistProfileAction, (state, { userId: string }) => {\n    return {\n      ...state,\n    };\n  }),\n  on(UserActions.CreateArtistProfileSuccessAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  })\n)"
            },
            {
                "name": "APP",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_shared/constants/app.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  NAME: 'App Name',\n}"
            },
            {
                "name": "CleanErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/error.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ERROR_ACTIONS.CLEAN_ERROR)"
            },
            {
                "name": "CreateArtistProfileAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_ARTIST_PROFILE,\n  props<{ userId: string }>()\n)"
            },
            {
                "name": "CreateArtistProfileFailAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_ARTIST_PROFILE_FAIL,\n  props<{ payload: any }>()\n)"
            },
            {
                "name": "CreateArtistProfileSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_ARTIST_PROFILE_SUCCESS,\n  props<{ user: IUser }>()\n)"
            },
            {
                "name": "CreateArtistServiceAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_ARTIST_SERVICE,\n  props<{ userId: string; serviceId: string; cost: number }>()\n)"
            },
            {
                "name": "CreateArtistServiceFailAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_ARTIST_SERVICE_FAIL,\n  props<{ payload: any }>()\n)"
            },
            {
                "name": "CreateArtistServiceSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_ARTIST_SERVICE_SUCCESS,\n  props<{ artistProfile: IArtistProfile }>()\n)"
            },
            {
                "name": "CreateConsumerProfileAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_CONSUMER_PROFILE,\n  props<{ userId: string }>()\n)"
            },
            {
                "name": "CreateConsumerProfileFailAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_CONSUMER_PROFILE_FAIL,\n  props<{ payload: any }>()\n)"
            },
            {
                "name": "CreateConsumerProfileSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_CONSUMER_PROFILE_SUCCESS,\n  props<{ user: IUser }>()\n)"
            },
            {
                "name": "declarations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/store.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "effects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/effects/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[AuthEffects, UserEffects, ProviderEffects, UiEffects]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  baseUrl: 'http://localhost:1337/',\n}"
            },
            {
                "name": "ErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_shared/components/error-message/error-message.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "errorState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/selectors/error.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: BWSState) => state.error"
            },
            {
                "name": "FEATURE_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/constants/features.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  AUTH: 'auth',\n  USER: 'user',\n  ERROR: 'error',\n  PROVIDER: 'provider',\n}"
            },
            {
                "name": "GeneralForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/onboarding/components/general-form/general-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "getCategories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/selectors/provider.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  providerState,\n  (state: ProviderState) => state.categories\n)"
            },
            {
                "name": "GetCategoriesAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/provider.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_CATEGORIES\n)"
            },
            {
                "name": "GetCategoriesFailAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/provider.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_CATEGORIES_FAIL,\n  props<{ payload: any }>()\n)"
            },
            {
                "name": "GetCategoriesSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/provider.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_CATEGORIES_SUCCESS,\n  props<{ categories: Array<ICategory> }>()\n)"
            },
            {
                "name": "getLastError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/selectors/error.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  errorState,\n  (state: ErrorState) => state.lastError\n)"
            },
            {
                "name": "getServices",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/selectors/provider.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  providerState,\n  (state: ProviderState) => state.services\n)"
            },
            {
                "name": "GetServicesAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/provider.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_SERVICES,\n  props<{ category: string }>()\n)"
            },
            {
                "name": "GetServicesFailAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/provider.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_SERVICES_FAIL,\n  props<{ payload: any }>()\n)"
            },
            {
                "name": "GetServicesSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/provider.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_SERVICES_SUCCESS,\n  props<{ services: Array<IService> }>()\n)"
            },
            {
                "name": "getUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/selectors/user.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  userState,\n  (state: UserState) => state.user\n)"
            },
            {
                "name": "GetUserFailAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.GET_USER_FAIL,\n  props<{ payload: any }>()\n)"
            },
            {
                "name": "GetUserSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.GET_USER_SUCCESS,\n  props<{ user: IUser }>()\n)"
            },
            {
                "name": "imports",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/store.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[StoreModule.forRoot(reducers), EffectsModule.forRoot(effects)]"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AuthState",
                "defaultValue": "{\n  token: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/error.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ErrorState",
                "defaultValue": "{\n  lastError: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/provider.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProviderState",
                "defaultValue": "{\n  categories: [],\n  services: [],\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/ui.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UiState",
                "defaultValue": "{\n  modal: false,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/user.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserState",
                "defaultValue": "{\n  user: null,\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/pages/login/login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "LoginAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  AUTH_ACTIONS.LOGIN,\n  props<{ params: ILogin }>()\n)"
            },
            {
                "name": "LoginFailedAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  AUTH_ACTIONS.LOGIN_FAIL,\n  props<{ payload: any }>()\n)"
            },
            {
                "name": "LoginSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  AUTH_ACTIONS.LOGIN_SUCCESS,\n  props<{ session: ISession }>()\n)"
            },
            {
                "name": "Navbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/_shared/components/layout/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "Onboarding",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/onboarding/pages/onboarding/onboarding.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProfileForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/onboarding/components/profile-form/profile-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "providers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/store.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[]"
            },
            {
                "name": "providerState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/selectors/provider.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: BWSState) => state.provider"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<BWSState>",
                "defaultValue": "{\n  UI: UiReducer,\n  auth: AuthReducer,\n  user: UserReducer,\n  error: ErrorReducer,\n  provider: ProviderReducer,\n}"
            },
            {
                "name": "RemoveOpenedModalAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/ui.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  UI_ACTIONS.REMOVE_OPENED_MODAL\n)"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ServicesForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/onboarding/components/services-form/services-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "SetErrorAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/error.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  ERROR_ACTIONS.SET_ERROR,\n  props<{ error: string }>()\n)"
            },
            {
                "name": "SetOpenedModalAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/ui.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(UI_ACTIONS.SET_OPENED_MODAL)"
            },
            {
                "name": "Signin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/pages/signin/signin.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {},\n})"
            },
            {
                "name": "SigninAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  AUTH_ACTIONS.SIGNIN,\n  props<{ params: ILogin }>()\n)"
            },
            {
                "name": "SigninFailedAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  AUTH_ACTIONS.SIGNIN_FAIL,\n  props<{ payload: any }>()\n)"
            },
            {
                "name": "SigninSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  AUTH_ACTIONS.SIGNIN_SUCCESS,\n  props<{ session: ISession }>()\n)"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "UpdateUserAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.UPDATE_USER,\n  props<{ user: IUser }>()\n)"
            },
            {
                "name": "UpdateUserFailAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.UPDATE_USER_FAIL,\n  props<{ payload: any }>()\n)"
            },
            {
                "name": "UpdateUserSuccessAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/actions/user.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  USER_ACTIONS.UPDATE_USER_SUCCESS,\n  props<{ user: IUser }>()\n)"
            },
            {
                "name": "userState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/store/selectors/user.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: BWSState) => state.user"
            }
        ],
        "functions": [
            {
                "name": "AuthReducer",
                "file": "src/store/reducers/auth.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createRehydrateReducer",
                "file": "src/store/reducers/index.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "initialState",
                        "type": "S",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ons",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "ActionReducer<S, A>",
                "jsdoctags": [
                    {
                        "name": "key",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initialState",
                        "type": "S",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ons",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ErrorReducer",
                "file": "src/store/reducers/error.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ProviderReducer",
                "file": "src/store/reducers/provider.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "UiReducer",
                "file": "src/store/reducers/ui.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "UserReducer",
                "file": "src/store/reducers/user.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "AUTH_ACTIONS",
                "childs": [
                    {
                        "name": "LOGIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTH] Login"
                    },
                    {
                        "name": "LOGIN_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTH] Login Success"
                    },
                    {
                        "name": "LOGIN_FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTH] Login Fail"
                    },
                    {
                        "name": "SIGNIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTH] Signin"
                    },
                    {
                        "name": "SIGNIN_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTH] Signin SUCCESS"
                    },
                    {
                        "name": "SIGNIN_FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTH] Signin Fail"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/store/actions/auth.actions.ts"
            },
            {
                "name": "ERROR_ACTIONS",
                "childs": [
                    {
                        "name": "SET_ERROR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[ERROR] Set Error"
                    },
                    {
                        "name": "CLEAN_ERROR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[ERROR] Clean Error"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/store/actions/error.actions.ts"
            },
            {
                "name": "GenderEnum",
                "childs": [
                    {
                        "name": "masculino",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Masculino"
                    },
                    {
                        "name": "femenino",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Femenino"
                    },
                    {
                        "name": "privado",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Prefiero no responder"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/_shared/enums/gender.enum.ts"
            },
            {
                "name": "OnboardingStepsEnum",
                "childs": [
                    {
                        "name": "profile",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "profile"
                    },
                    {
                        "name": "general",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "general"
                    },
                    {
                        "name": "services",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "services"
                    },
                    {
                        "name": "none",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "none"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/_shared/enums/onboarding-steps.enum.ts"
            },
            {
                "name": "PROVIDER_ACTIONS",
                "childs": [
                    {
                        "name": "GET_CATEGORIES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PROVIDER] Get Categories"
                    },
                    {
                        "name": "GET_CATEGORIES_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PROVIDER] Get Categories Success"
                    },
                    {
                        "name": "GET_CATEGORIES_FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PROVIDER] Get Categories Fail"
                    },
                    {
                        "name": "GET_SERVICES",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PROVIDER] Get Services"
                    },
                    {
                        "name": "GET_SERVICES_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PROVIDER] Get Services Success"
                    },
                    {
                        "name": "GET_SERVICES_FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PROVIDER] Get Services Fail"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/store/actions/provider.actions.ts"
            },
            {
                "name": "UI_ACTIONS",
                "childs": [
                    {
                        "name": "SET_OPENED_MODAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[UI] Set Opened Modal"
                    },
                    {
                        "name": "REMOVE_OPENED_MODAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[UI] Remove Opened Modal"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/store/actions/ui.actions.ts"
            },
            {
                "name": "USER_ACTIONS",
                "childs": [
                    {
                        "name": "GET_USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Get User"
                    },
                    {
                        "name": "GET_USER_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Get User Success"
                    },
                    {
                        "name": "GET_USER_FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Get User Fail"
                    },
                    {
                        "name": "UPDATE_USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Update User"
                    },
                    {
                        "name": "UPDATE_USER_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Update User Success"
                    },
                    {
                        "name": "UPDATE_USER_FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Update User Fail"
                    },
                    {
                        "name": "CREATE_USER_ARTIST_PROFILE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Create User Artist Profile"
                    },
                    {
                        "name": "CREATE_USER_ARTIST_PROFILE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Create User Artist Profile Success"
                    },
                    {
                        "name": "CREATE_USER_ARTIST_PROFILE_FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Create User Artist Profile Fail"
                    },
                    {
                        "name": "CREATE_ARTIST_SERVICE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Create Artist Service"
                    },
                    {
                        "name": "CREATE_ARTIST_SERVICE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Create Artist Service Success"
                    },
                    {
                        "name": "CREATE_ARTIST_SERVICE_FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Create Artist Service Fail"
                    },
                    {
                        "name": "CREATE_USER_CONSUMER_PROFILE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Create User Consumer Profile"
                    },
                    {
                        "name": "CREATE_USER_CONSUMER_PROFILE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Create User Consumer Profile Success"
                    },
                    {
                        "name": "CREATE_USER_CONSUMER_PROFILE_FAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[USER] Create User Consumer Profile Fail"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/store/actions/user.actions.ts"
            }
        ],
        "groupedVariables": {
            "src/store/reducers/auth.reducer.ts": [
                {
                    "name": "_authReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createRehydrateReducer(\n  FEATURE_NAME.AUTH,\n  initialState,\n  on(AuthActions.LoginAction, (state) => {\n    return state;\n  }),\n  on(AuthActions.LoginSuccessAction, (state, { session }) => {\n    return {\n      ...state,\n      token: session.token,\n    };\n  }),\n  on(AuthActions.SigninAction, (state) => {\n    return state;\n  }),\n\n  on(AuthActions.SigninSuccessAction, (state, { session }) => {\n    return {\n      ...state,\n      token: session.token,\n    };\n  })\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthState",
                    "defaultValue": "{\n  token: null,\n}"
                }
            ],
            "src/store/reducers/error.reducer.ts": [
                {
                    "name": "_errorReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/error.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createRehydrateReducer(\n  FEATURE_NAME.ERROR,\n  initialState,\n  on(ErrorActions.SetErrorAction, (state, { error }) => {\n    return {\n      ...state,\n      lastError: error,\n    };\n  }),\n  on(ErrorActions.CleanErrorAction, (state) => {\n    return {\n      ...state,\n      lastError: null,\n    };\n  })\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/error.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErrorState",
                    "defaultValue": "{\n  lastError: null,\n}"
                }
            ],
            "src/store/reducers/provider.reducer.ts": [
                {
                    "name": "_providerReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/provider.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createRehydrateReducer(\n  FEATURE_NAME.PROVIDER,\n  initialState,\n  on(ProviderActions.GetServicesAction, (state, { category }) => {\n    return {\n      ...state,\n    };\n  }),\n  on(ProviderActions.GetServicesSuccessAction, (state, { services }) => {\n    return {\n      ...state,\n      services,\n    };\n  }),\n\n  on(ProviderActions.GetServicesFailAction, (state, { payload }) => {\n    return {\n      ...state,\n    };\n  }),\n\n  //CATEGORIES\n  on(ProviderActions.GetCategoriesAction, (state) => {\n    return {\n      ...state,\n    };\n  }),\n  on(ProviderActions.GetCategoriesSuccessAction, (state, { categories }) => {\n    return {\n      ...state,\n      categories,\n    };\n  }),\n  on(ProviderActions.GetCategoriesFailAction, (state, { payload }) => {\n    return {\n      ...state,\n    };\n  })\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/provider.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProviderState",
                    "defaultValue": "{\n  categories: [],\n  services: [],\n}"
                }
            ],
            "src/store/reducers/ui.reducer.ts": [
                {
                    "name": "_uiReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/ui.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(UI_Actions.SetOpenedModalAction, (state) => {\n    return {\n      ...state,\n      modal: true,\n    };\n  }),\n  on(UI_Actions.RemoveOpenedModalAction, (state) => {\n    return {\n      ...state,\n      modal: false,\n    };\n  })\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/ui.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UiState",
                    "defaultValue": "{\n  modal: false,\n}"
                }
            ],
            "src/store/reducers/user.reducer.ts": [
                {
                    "name": "_userReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/user.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createRehydrateReducer(\n  FEATURE_NAME.USER,\n  initialState,\n  on(UserActions.CreateArtistServiceAction, (state) => {\n    return {\n      ...state,\n    };\n  }),\n  on(\n    UserActions.CreateArtistServiceSuccessAction,\n    (state, { artistProfile }) => {\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          artistProfile,\n        },\n      };\n    }\n  ),\n  on(UserActions.CreateArtistServiceFailAction, (state, payload) => {\n    return {\n      ...state,\n    };\n  }),\n\n  on(UserActions.UpdateUserAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  }),\n  on(UserActions.UpdateUserSuccessAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  }),\n  on(UserActions.UpdateUserFailAction, (state, { payload }) => {\n    return {\n      ...state,\n    };\n  }),\n\n  on(UserActions.GetUserSuccessAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  }),\n  on(UserActions.GetUserFailAction, (state, { payload }) => {\n    return {\n      ...state,\n    };\n  }),\n  on(UserActions.CreateConsumerProfileAction, (state, { userId: string }) => {\n    return {\n      ...state,\n    };\n  }),\n  on(UserActions.CreateConsumerProfileSuccessAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  }),\n\n  on(UserActions.CreateArtistProfileAction, (state, { userId: string }) => {\n    return {\n      ...state,\n    };\n  }),\n  on(UserActions.CreateArtistProfileSuccessAction, (state, { user }) => {\n    return {\n      ...state,\n      user,\n    };\n  })\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/user.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserState",
                    "defaultValue": "{\n  user: null,\n}"
                }
            ],
            "src/app/_shared/constants/app.ts": [
                {
                    "name": "APP",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_shared/constants/app.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  NAME: 'App Name',\n}"
                }
            ],
            "src/store/actions/error.actions.ts": [
                {
                    "name": "CleanErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/error.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ERROR_ACTIONS.CLEAN_ERROR)"
                },
                {
                    "name": "SetErrorAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/error.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  ERROR_ACTIONS.SET_ERROR,\n  props<{ error: string }>()\n)"
                }
            ],
            "src/store/actions/user.actions.ts": [
                {
                    "name": "CreateArtistProfileAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_ARTIST_PROFILE,\n  props<{ userId: string }>()\n)"
                },
                {
                    "name": "CreateArtistProfileFailAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_ARTIST_PROFILE_FAIL,\n  props<{ payload: any }>()\n)"
                },
                {
                    "name": "CreateArtistProfileSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_ARTIST_PROFILE_SUCCESS,\n  props<{ user: IUser }>()\n)"
                },
                {
                    "name": "CreateArtistServiceAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_ARTIST_SERVICE,\n  props<{ userId: string; serviceId: string; cost: number }>()\n)"
                },
                {
                    "name": "CreateArtistServiceFailAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_ARTIST_SERVICE_FAIL,\n  props<{ payload: any }>()\n)"
                },
                {
                    "name": "CreateArtistServiceSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_ARTIST_SERVICE_SUCCESS,\n  props<{ artistProfile: IArtistProfile }>()\n)"
                },
                {
                    "name": "CreateConsumerProfileAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_CONSUMER_PROFILE,\n  props<{ userId: string }>()\n)"
                },
                {
                    "name": "CreateConsumerProfileFailAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_CONSUMER_PROFILE_FAIL,\n  props<{ payload: any }>()\n)"
                },
                {
                    "name": "CreateConsumerProfileSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.CREATE_USER_CONSUMER_PROFILE_SUCCESS,\n  props<{ user: IUser }>()\n)"
                },
                {
                    "name": "GetUserFailAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.GET_USER_FAIL,\n  props<{ payload: any }>()\n)"
                },
                {
                    "name": "GetUserSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.GET_USER_SUCCESS,\n  props<{ user: IUser }>()\n)"
                },
                {
                    "name": "UpdateUserAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.UPDATE_USER,\n  props<{ user: IUser }>()\n)"
                },
                {
                    "name": "UpdateUserFailAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.UPDATE_USER_FAIL,\n  props<{ payload: any }>()\n)"
                },
                {
                    "name": "UpdateUserSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/user.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  USER_ACTIONS.UPDATE_USER_SUCCESS,\n  props<{ user: IUser }>()\n)"
                }
            ],
            "src/store/store.module.ts": [
                {
                    "name": "declarations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/store.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "imports",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/store.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[StoreModule.forRoot(reducers), EffectsModule.forRoot(effects)]"
                },
                {
                    "name": "providers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/store.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[]"
                }
            ],
            "src/store/effects/index.ts": [
                {
                    "name": "effects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/effects/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[AuthEffects, UserEffects, ProviderEffects, UiEffects]"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  baseUrl: 'http://localhost:1337/',\n}"
                }
            ],
            "src/app/_shared/components/error-message/error-message.stories.ts": [
                {
                    "name": "ErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_shared/components/error-message/error-message.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/store/selectors/error.selectors.ts": [
                {
                    "name": "errorState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/selectors/error.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: BWSState) => state.error"
                },
                {
                    "name": "getLastError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/selectors/error.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  errorState,\n  (state: ErrorState) => state.lastError\n)"
                }
            ],
            "src/store/constants/features.ts": [
                {
                    "name": "FEATURE_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/constants/features.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  AUTH: 'auth',\n  USER: 'user',\n  ERROR: 'error',\n  PROVIDER: 'provider',\n}"
                }
            ],
            "src/app/onboarding/components/general-form/general-form.stories.ts": [
                {
                    "name": "GeneralForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/onboarding/components/general-form/general-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/store/selectors/provider.selectors.ts": [
                {
                    "name": "getCategories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/selectors/provider.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  providerState,\n  (state: ProviderState) => state.categories\n)"
                },
                {
                    "name": "getServices",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/selectors/provider.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  providerState,\n  (state: ProviderState) => state.services\n)"
                },
                {
                    "name": "providerState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/selectors/provider.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: BWSState) => state.provider"
                }
            ],
            "src/store/actions/provider.actions.ts": [
                {
                    "name": "GetCategoriesAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/provider.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_CATEGORIES\n)"
                },
                {
                    "name": "GetCategoriesFailAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/provider.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_CATEGORIES_FAIL,\n  props<{ payload: any }>()\n)"
                },
                {
                    "name": "GetCategoriesSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/provider.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_CATEGORIES_SUCCESS,\n  props<{ categories: Array<ICategory> }>()\n)"
                },
                {
                    "name": "GetServicesAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/provider.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_SERVICES,\n  props<{ category: string }>()\n)"
                },
                {
                    "name": "GetServicesFailAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/provider.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_SERVICES_FAIL,\n  props<{ payload: any }>()\n)"
                },
                {
                    "name": "GetServicesSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/provider.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  PROVIDER_ACTIONS.GET_SERVICES_SUCCESS,\n  props<{ services: Array<IService> }>()\n)"
                }
            ],
            "src/store/selectors/user.selectors.ts": [
                {
                    "name": "getUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/selectors/user.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  userState,\n  (state: UserState) => state.user\n)"
                },
                {
                    "name": "userState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/selectors/user.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: BWSState) => state.user"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/auth/pages/login/login.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/pages/login/login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/store/actions/auth.actions.ts": [
                {
                    "name": "LoginAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  AUTH_ACTIONS.LOGIN,\n  props<{ params: ILogin }>()\n)"
                },
                {
                    "name": "LoginFailedAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  AUTH_ACTIONS.LOGIN_FAIL,\n  props<{ payload: any }>()\n)"
                },
                {
                    "name": "LoginSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  AUTH_ACTIONS.LOGIN_SUCCESS,\n  props<{ session: ISession }>()\n)"
                },
                {
                    "name": "SigninAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  AUTH_ACTIONS.SIGNIN,\n  props<{ params: ILogin }>()\n)"
                },
                {
                    "name": "SigninFailedAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  AUTH_ACTIONS.SIGNIN_FAIL,\n  props<{ payload: any }>()\n)"
                },
                {
                    "name": "SigninSuccessAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  AUTH_ACTIONS.SIGNIN_SUCCESS,\n  props<{ session: ISession }>()\n)"
                }
            ],
            "src/app/_shared/components/layout/navbar/navbar.stories.ts": [
                {
                    "name": "Navbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/_shared/components/layout/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/app/onboarding/pages/onboarding/onboarding.stories.ts": [
                {
                    "name": "Onboarding",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/onboarding/pages/onboarding/onboarding.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/app/onboarding/components/profile-form/profile-form.stories.ts": [
                {
                    "name": "ProfileForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/onboarding/components/profile-form/profile-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/store/reducers/index.ts": [
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<BWSState>",
                    "defaultValue": "{\n  UI: UiReducer,\n  auth: AuthReducer,\n  user: UserReducer,\n  error: ErrorReducer,\n  provider: ProviderReducer,\n}"
                }
            ],
            "src/store/actions/ui.actions.ts": [
                {
                    "name": "RemoveOpenedModalAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/ui.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  UI_ACTIONS.REMOVE_OPENED_MODAL\n)"
                },
                {
                    "name": "SetOpenedModalAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/store/actions/ui.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(UI_ACTIONS.SET_OPENED_MODAL)"
                }
            ],
            "src/app/onboarding/components/services-form/services-form.stories.ts": [
                {
                    "name": "ServicesForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/onboarding/components/services-form/services-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ],
            "src/app/auth/pages/signin/signin.stories.ts": [
                {
                    "name": "Signin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/pages/signin/signin.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {},\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/store/reducers/auth.reducer.ts": [
                {
                    "name": "AuthReducer",
                    "file": "src/store/reducers/auth.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/store/reducers/index.ts": [
                {
                    "name": "createRehydrateReducer",
                    "file": "src/store/reducers/index.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "initialState",
                            "type": "S",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ons",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "ActionReducer<S, A>",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initialState",
                            "type": "S",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ons",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/store/reducers/error.reducer.ts": [
                {
                    "name": "ErrorReducer",
                    "file": "src/store/reducers/error.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/store/reducers/provider.reducer.ts": [
                {
                    "name": "ProviderReducer",
                    "file": "src/store/reducers/provider.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/store/reducers/ui.reducer.ts": [
                {
                    "name": "UiReducer",
                    "file": "src/store/reducers/ui.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/store/reducers/user.reducer.ts": [
                {
                    "name": "UserReducer",
                    "file": "src/store/reducers/user.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/store/actions/auth.actions.ts": [
                {
                    "name": "AUTH_ACTIONS",
                    "childs": [
                        {
                            "name": "LOGIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTH] Login"
                        },
                        {
                            "name": "LOGIN_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTH] Login Success"
                        },
                        {
                            "name": "LOGIN_FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTH] Login Fail"
                        },
                        {
                            "name": "SIGNIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTH] Signin"
                        },
                        {
                            "name": "SIGNIN_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTH] Signin SUCCESS"
                        },
                        {
                            "name": "SIGNIN_FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTH] Signin Fail"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/store/actions/auth.actions.ts"
                }
            ],
            "src/store/actions/error.actions.ts": [
                {
                    "name": "ERROR_ACTIONS",
                    "childs": [
                        {
                            "name": "SET_ERROR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[ERROR] Set Error"
                        },
                        {
                            "name": "CLEAN_ERROR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[ERROR] Clean Error"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/store/actions/error.actions.ts"
                }
            ],
            "src/app/_shared/enums/gender.enum.ts": [
                {
                    "name": "GenderEnum",
                    "childs": [
                        {
                            "name": "masculino",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Masculino"
                        },
                        {
                            "name": "femenino",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Femenino"
                        },
                        {
                            "name": "privado",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Prefiero no responder"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/_shared/enums/gender.enum.ts"
                }
            ],
            "src/app/_shared/enums/onboarding-steps.enum.ts": [
                {
                    "name": "OnboardingStepsEnum",
                    "childs": [
                        {
                            "name": "profile",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "profile"
                        },
                        {
                            "name": "general",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "general"
                        },
                        {
                            "name": "services",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "services"
                        },
                        {
                            "name": "none",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "none"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/_shared/enums/onboarding-steps.enum.ts"
                }
            ],
            "src/store/actions/provider.actions.ts": [
                {
                    "name": "PROVIDER_ACTIONS",
                    "childs": [
                        {
                            "name": "GET_CATEGORIES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PROVIDER] Get Categories"
                        },
                        {
                            "name": "GET_CATEGORIES_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PROVIDER] Get Categories Success"
                        },
                        {
                            "name": "GET_CATEGORIES_FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PROVIDER] Get Categories Fail"
                        },
                        {
                            "name": "GET_SERVICES",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PROVIDER] Get Services"
                        },
                        {
                            "name": "GET_SERVICES_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PROVIDER] Get Services Success"
                        },
                        {
                            "name": "GET_SERVICES_FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PROVIDER] Get Services Fail"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/store/actions/provider.actions.ts"
                }
            ],
            "src/store/actions/ui.actions.ts": [
                {
                    "name": "UI_ACTIONS",
                    "childs": [
                        {
                            "name": "SET_OPENED_MODAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[UI] Set Opened Modal"
                        },
                        {
                            "name": "REMOVE_OPENED_MODAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[UI] Remove Opened Modal"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/store/actions/ui.actions.ts"
                }
            ],
            "src/store/actions/user.actions.ts": [
                {
                    "name": "USER_ACTIONS",
                    "childs": [
                        {
                            "name": "GET_USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Get User"
                        },
                        {
                            "name": "GET_USER_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Get User Success"
                        },
                        {
                            "name": "GET_USER_FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Get User Fail"
                        },
                        {
                            "name": "UPDATE_USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Update User"
                        },
                        {
                            "name": "UPDATE_USER_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Update User Success"
                        },
                        {
                            "name": "UPDATE_USER_FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Update User Fail"
                        },
                        {
                            "name": "CREATE_USER_ARTIST_PROFILE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Create User Artist Profile"
                        },
                        {
                            "name": "CREATE_USER_ARTIST_PROFILE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Create User Artist Profile Success"
                        },
                        {
                            "name": "CREATE_USER_ARTIST_PROFILE_FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Create User Artist Profile Fail"
                        },
                        {
                            "name": "CREATE_ARTIST_SERVICE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Create Artist Service"
                        },
                        {
                            "name": "CREATE_ARTIST_SERVICE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Create Artist Service Success"
                        },
                        {
                            "name": "CREATE_ARTIST_SERVICE_FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Create Artist Service Fail"
                        },
                        {
                            "name": "CREATE_USER_CONSUMER_PROFILE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Create User Consumer Profile"
                        },
                        {
                            "name": "CREATE_USER_CONSUMER_PROFILE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Create User Consumer Profile Success"
                        },
                        {
                            "name": "CREATE_USER_CONSUMER_PROFILE_FAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[USER] Create User Consumer Profile Fail"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/store/actions/user.actions.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "loadChildren": "./auth/auth.module#AuthModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/auth/auth-routing.module.ts",
                                        "module": "AuthRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "LoginComponent"
                                            },
                                            {
                                                "path": "signin",
                                                "component": "SigninComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AuthModule"
                            }
                        ]
                    },
                    {
                        "path": "onboarding",
                        "loadChildren": "./onboarding/onboarding.module#OnboardingModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/onboarding/onboarding-routing.module.ts",
                                        "module": "OnboardingRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "OnboardingComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "OnboardingModule"
                            }
                        ]
                    },
                    {
                        "path": "1",
                        "loadChildren": "./consumer/consumer.module#ConsumerModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/consumer/consumer-routing.module.ts",
                                        "module": "ConsumerRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "loadChildren": "./home/home.module#HomeModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [
                                                            {
                                                                "name": "routes",
                                                                "filename": "src/app/artist/home/home-routing.module.ts",
                                                                "module": "HomeRoutingModule",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "HomeComponent"
                                                                    }
                                                                ],
                                                                "kind": "module"
                                                            }
                                                        ],
                                                        "module": "HomeModule"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ConsumerModule"
                            }
                        ]
                    },
                    {
                        "path": "2",
                        "loadChildren": "./artist/artist.module#ArtistModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/artist/artist-routing.module.ts",
                                        "module": "ArtistRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "loadChildren": "./home/home.module#HomeModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [],
                                                        "module": "HomeModule"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ArtistModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/_core/classes/form-group.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BWSFormGroup",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/_core/interceptors/jwt.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "JwtInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/_core/services/artist-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ArtistServicesService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/_core/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/_core/services/category.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CategoryService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/_core/services/error.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ErrorService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/_core/services/profile.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProfileService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/_core/services/request.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RequestService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/_core/services/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/components/base-destroy.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DestroyHook",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/components/error-message/error-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/components/error-message/error-message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/components/layout/navbar-artist/navbar-artist.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarArtistComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/components/layout/navbar-consumer/navbar-consumer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarConsumerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/components/layout/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/components/layout/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Navbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/constants/app.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/database/_base.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BaseModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/database/artist-profile.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IArtistProfile",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/database/artist-service.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IArtistService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/database/category.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICategory",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/database/consumer-profile.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IConsumerProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/database/organization.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Organization",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/database/service.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/database/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IUser",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/request/login.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILogin",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/response/result-list.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResultListModel",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/response/result.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResultModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/models/response/session.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISession",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/util/enums.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UtilEnum",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/_shared/validators/must-match.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MustMatchValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/artist/home/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/login/login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/signin/signin.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/pages/signin/signin.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Signin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/consumer/home/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/consumer/store/states/consumer.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ConsumerState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/onboarding/components/general-form/general-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GeneralFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/onboarding/components/general-form/general-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GeneralForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/onboarding/components/profile-form/profile-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/onboarding/components/profile-form/profile-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProfileForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/onboarding/components/services-form/services-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ServicesFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/onboarding/components/services-form/services-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ServicesForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/onboarding/pages/onboarding/onboarding.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnboardingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/onboarding/pages/onboarding/onboarding.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Onboarding",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginFailedAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SigninAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SigninFailedAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SigninSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/error.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CleanErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/error.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SetErrorAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/provider.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetCategoriesAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/provider.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetCategoriesFailAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/provider.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetCategoriesSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/provider.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetServicesAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/provider.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetServicesFailAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/provider.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetServicesSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/ui.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RemoveOpenedModalAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/ui.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SetOpenedModalAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateArtistProfileAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateArtistProfileFailAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateArtistProfileSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateArtistServiceAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateArtistServiceFailAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateArtistServiceSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateConsumerProfileAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateConsumerProfileFailAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateConsumerProfileSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetUserFailAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetUserSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UpdateUserAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UpdateUserFailAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/actions/user.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UpdateUserSuccessAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/constants/features.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FEATURE_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/effects/auth.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/store/effects/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "effects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/effects/provider.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProviderEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/store/effects/ui.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UiEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/store/effects/user.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserEffects",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/auth.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AuthReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_authReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/error.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ErrorReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/error.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_errorReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/error.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/index.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createRehydrateReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/provider.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ProviderReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/provider.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_providerReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/provider.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/ui.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "UiReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/ui.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_uiReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/ui.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/user.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "UserReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/user.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_userReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/reducers/user.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/selectors/error.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/selectors/error.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getLastError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/selectors/provider.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCategories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/selectors/provider.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getServices",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/selectors/provider.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "providerState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/selectors/user.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/selectors/user.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/states/BWS.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BWSState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/store/states/auth.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/store/states/error.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ErrorState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/store/states/provider.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProviderState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/store/states/ui.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UiState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/store/states/user.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/store/store.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "declarations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/store.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "imports",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/store/store.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "providers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}